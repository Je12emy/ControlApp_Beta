#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControlApp.DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ControlApp")]
	public partial class sqlConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_AREA(TBL_AREA instance);
    partial void UpdateTBL_AREA(TBL_AREA instance);
    partial void DeleteTBL_AREA(TBL_AREA instance);
    partial void InsertTBL_CUSTOMER(TBL_CUSTOMER instance);
    partial void UpdateTBL_CUSTOMER(TBL_CUSTOMER instance);
    partial void DeleteTBL_CUSTOMER(TBL_CUSTOMER instance);
    partial void InsertTBL_DPT(TBL_DPT instance);
    partial void UpdateTBL_DPT(TBL_DPT instance);
    partial void DeleteTBL_DPT(TBL_DPT instance);
    partial void InsertTBL_PERMISSION(TBL_PERMISSION instance);
    partial void UpdateTBL_PERMISSION(TBL_PERMISSION instance);
    partial void DeleteTBL_PERMISSION(TBL_PERMISSION instance);
    partial void InsertTBL_POSITION(TBL_POSITION instance);
    partial void UpdateTBL_POSITION(TBL_POSITION instance);
    partial void DeleteTBL_POSITION(TBL_POSITION instance);
    partial void InsertTBL_PREPAID(TBL_PREPAID instance);
    partial void UpdateTBL_PREPAID(TBL_PREPAID instance);
    partial void DeleteTBL_PREPAID(TBL_PREPAID instance);
    partial void InsertTBL_PRODUCT(TBL_PRODUCT instance);
    partial void UpdateTBL_PRODUCT(TBL_PRODUCT instance);
    partial void DeleteTBL_PRODUCT(TBL_PRODUCT instance);
    partial void InsertTBL_RECEIPT(TBL_RECEIPT instance);
    partial void UpdateTBL_RECEIPT(TBL_RECEIPT instance);
    partial void DeleteTBL_RECEIPT(TBL_RECEIPT instance);
    partial void InsertTBL_ROLE(TBL_ROLE instance);
    partial void UpdateTBL_ROLE(TBL_ROLE instance);
    partial void DeleteTBL_ROLE(TBL_ROLE instance);
    partial void InsertTBL_SESSION(TBL_SESSION instance);
    partial void UpdateTBL_SESSION(TBL_SESSION instance);
    partial void DeleteTBL_SESSION(TBL_SESSION instance);
    partial void InsertTBL_STOCK(TBL_STOCK instance);
    partial void UpdateTBL_STOCK(TBL_STOCK instance);
    partial void DeleteTBL_STOCK(TBL_STOCK instance);
    partial void InsertTBL_USER(TBL_USER instance);
    partial void UpdateTBL_USER(TBL_USER instance);
    partial void DeleteTBL_USER(TBL_USER instance);
    partial void InsertTBL_CXC(TBL_CXC instance);
    partial void UpdateTBL_CXC(TBL_CXC instance);
    partial void DeleteTBL_CXC(TBL_CXC instance);
    partial void InsertTBL_ORDER(TBL_ORDER instance);
    partial void UpdateTBL_ORDER(TBL_ORDER instance);
    partial void DeleteTBL_ORDER(TBL_ORDER instance);
    #endregion
		
		public sqlConnectionDataContext() : 
				base(global::ControlApp.DataAccess.Properties.Settings.Default.ControlAppConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public sqlConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sqlConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<TBL_AREA> TBL_AREAs
		{
			get
			{
				return this.GetTable<TBL_AREA>();
			}
		}
		
		public System.Data.Linq.Table<TBL_CUSTOMER> TBL_CUSTOMERs
		{
			get
			{
				return this.GetTable<TBL_CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<TBL_DPT> TBL_DPTs
		{
			get
			{
				return this.GetTable<TBL_DPT>();
			}
		}
		
		public System.Data.Linq.Table<TBL_PERMISSION> TBL_PERMISSIONs
		{
			get
			{
				return this.GetTable<TBL_PERMISSION>();
			}
		}
		
		public System.Data.Linq.Table<TBL_POSITION> TBL_POSITIONs
		{
			get
			{
				return this.GetTable<TBL_POSITION>();
			}
		}
		
		public System.Data.Linq.Table<TBL_PREPAID> TBL_PREPAIDs
		{
			get
			{
				return this.GetTable<TBL_PREPAID>();
			}
		}
		
		public System.Data.Linq.Table<TBL_PRODUCT> TBL_PRODUCTs
		{
			get
			{
				return this.GetTable<TBL_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<TBL_RECEIPT> TBL_RECEIPTs
		{
			get
			{
				return this.GetTable<TBL_RECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<TBL_ROLE> TBL_ROLEs
		{
			get
			{
				return this.GetTable<TBL_ROLE>();
			}
		}
		
		public System.Data.Linq.Table<TBL_ROLE_PERMISSION> TBL_ROLE_PERMISSIONs
		{
			get
			{
				return this.GetTable<TBL_ROLE_PERMISSION>();
			}
		}
		
		public System.Data.Linq.Table<TBL_SESSION> TBL_SESSIONs
		{
			get
			{
				return this.GetTable<TBL_SESSION>();
			}
		}
		
		public System.Data.Linq.Table<TBL_STOCK> TBL_STOCKs
		{
			get
			{
				return this.GetTable<TBL_STOCK>();
			}
		}
		
		public System.Data.Linq.Table<TBL_USER> TBL_USERs
		{
			get
			{
				return this.GetTable<TBL_USER>();
			}
		}
		
		public System.Data.Linq.Table<TBL_CXC> TBL_CXCs
		{
			get
			{
				return this.GetTable<TBL_CXC>();
			}
		}
		
		public System.Data.Linq.Table<TBL_ORDER> TBL_ORDERs
		{
			get
			{
				return this.GetTable<TBL_ORDER>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_AREA")]
		public ISingleResult<SP_CRUD_AREAResult> SP_CRUD_AREA([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_AREA, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_DPT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string pAREA_NAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_AREA, pID_DPT, pAREA_NAME);
			return ((ISingleResult<SP_CRUD_AREAResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_DPT")]
		public ISingleResult<SP_CRUD_DPTResult> SP_CRUD_DPT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_DPT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(75)")] string pNAME_DPT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_DPT, pID_BY, pNAME_DPT);
			return ((ISingleResult<SP_CRUD_DPTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_PER")]
		public ISingleResult<SP_CRUD_PERResult> SP_CRUD_PER([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_DPT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(75)")] string pNAME_PER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string pDESCRIP_PER)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_PER, pID_DPT, pNAME_PER, pDESCRIP_PER);
			return ((ISingleResult<SP_CRUD_PERResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_POSITION")]
		public ISingleResult<SP_CRUD_POSITIONResult> SP_CRUD_POSITION([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PST, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_AREA, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(75)")] string pNAME_PST)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_PST, pID_AREA, pID_BY, pNAME_PST);
			return ((ISingleResult<SP_CRUD_POSITIONResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_PRODUCT")]
		public ISingleResult<SP_CRUD_PRODUCTResult> SP_CRUD_PRODUCT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PRODUCT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pTOTAL_PRODUCT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string pDESCRIP_PRICE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_PRODUCT, pTOTAL_PRODUCT, pDESCRIP_PRICE);
			return ((ISingleResult<SP_CRUD_PRODUCTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_RECEIPT")]
		public ISingleResult<SP_CRUD_RECEIPTResult> SP_CRUD_RECEIPT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_RECEIPT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string pCUSTOMER_NAME, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pQUANTITY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pTOTAL_RECEIPT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PRODUCT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pUNIT_PRICE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pCASH, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pCHANGE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_RECEIPT, pID_BY, pCUSTOMER_NAME, pQUANTITY, pTOTAL_RECEIPT, pID_PRODUCT, pUNIT_PRICE, pCASH, pCHANGE);
			return ((ISingleResult<SP_CRUD_RECEIPTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_ROLE")]
		public ISingleResult<SP_CRUD_ROLEResult> SP_CRUD_ROLE([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_ROLE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(75)")] string pNAME_ROLE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string pDESCRIP_ROLE)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_ROLE, pNAME_ROLE, pDESCRIP_ROLE);
			return ((ISingleResult<SP_CRUD_ROLEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_ROLE_PER")]
		public ISingleResult<SP_CRUD_ROLE_PERResult> SP_CRUD_ROLE_PER([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_ROLE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pNAME_ROLE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pNAME_PER)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_ROLE, pID_PER, pNAME_ROLE, pNAME_PER);
			return ((ISingleResult<SP_CRUD_ROLE_PERResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_USER")]
		public ISingleResult<SP_CRUD_USERResult> SP_CRUD_USER([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(30)")] string pID_USER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string pUSER_NAME, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(150)")] string pUSER_EMAIL, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_DPT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_AREA, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PST, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_ROLE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string pUSER_NICKNAME, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string pUSER_PASSWORD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_USER, pUSER_NAME, pUSER_EMAIL, pID_DPT, pID_AREA, pID_PST, pID_ROLE, pUSER_NICKNAME, pUSER_PASSWORD);
			return ((ISingleResult<SP_CRUD_USERResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_CUSTOMER")]
		public ISingleResult<SP_CRUD_CUSTOMERResult> SP_CRUD_CUSTOMER([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_CUSTOMER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(25)")] string pCUSTOMER_NAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_CUSTOMER, pCUSTOMER_NAME);
			return ((ISingleResult<SP_CRUD_CUSTOMERResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_STOCK")]
		public ISingleResult<SP_CRUD_STOCKResult> SP_CRUD_STOCK([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_STOCK, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PRODUCT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pSTOCK_INITIAL_QUANTITY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pSTOCK_QUANTITY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pSTOCK_ADJUSTMENT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> pSTOCK_DATE_PRODUCT)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_STOCK, pID_PRODUCT, pSTOCK_INITIAL_QUANTITY, pSTOCK_QUANTITY, pSTOCK_ADJUSTMENT, pSTOCK_DATE_PRODUCT);
			return ((ISingleResult<SP_CRUD_STOCKResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_CXC")]
		public ISingleResult<SP_CRUD_CXCResult> SP_CRUD_CXC([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_CXC, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_CUSTOMER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PRODUCT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pQUANTITY_RETREAT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pQUANTITY_RETURN, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pTOTAL_CXC, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pBALANCE_CXC, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pCUSTOMER_NAME, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pPRODUCT_NAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_CXC, pID_CUSTOMER, pID_PRODUCT, pQUANTITY_RETREAT, pQUANTITY_RETURN, pTOTAL_CXC, pBALANCE_CXC, pCUSTOMER_NAME, pPRODUCT_NAME);
			return ((ISingleResult<SP_CRUD_CXCResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_PREPAID")]
		public ISingleResult<SP_CRUD_PREPAIDResult> SP_CRUD_PREPAID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PREPAID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_CUSTOMER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PRODUCT, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pPREPAID_QUANTITY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pPREPAID_TOTAL, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pPREPAID_CASH, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> pPREPAID_CHANGE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pPREPAID_BALANCE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pCUSTOMER_NAME)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_PREPAID, pID_CUSTOMER, pID_PRODUCT, pPREPAID_QUANTITY, pPREPAID_TOTAL, pPREPAID_CASH, pPREPAID_CHANGE, pPREPAID_BALANCE, pCUSTOMER_NAME);
			return ((ISingleResult<SP_CRUD_PREPAIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_CRUD_ORDER")]
		public ISingleResult<SP_CRUD_ORDERResult> SP_CRUD_ORDER([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> p_ACTION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string pID_BY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_ORDER, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pID_PREPAID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pORDER_QUANTITY, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> pORDER_DATE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> pORDER_DELIVERY)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), p_ACTION, pID_BY, pID_ORDER, pID_PREPAID, pORDER_QUANTITY, pORDER_DATE, pORDER_DELIVERY);
			return ((ISingleResult<SP_CRUD_ORDERResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log
	{
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private string _Thread;
		
		private string _Level;
		
		private string _Logger;
		
		private string _Message;
		
		private string _Exception;
		
		public Log()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thread", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Thread
		{
			get
			{
				return this._Thread;
			}
			set
			{
				if ((this._Thread != value))
				{
					this._Thread = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this._Level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logger", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Logger
		{
			get
			{
				return this._Logger;
			}
			set
			{
				if ((this._Logger != value))
				{
					this._Logger = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="VarChar(2000)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this._Exception = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_AREA")]
	public partial class TBL_AREA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_AREA;
		
		private System.Nullable<int> _ID_DPT;
		
		private string _AREA_NAME;
		
		private bool _AREA_STATE;
		
		private string _AREA_CREATEBY;
		
		private string _AREA_UPDATEDBY;
		
		private System.DateTime _AREA_CREATEDATE;
		
		private System.Nullable<System.DateTime> _AREA_UPDATEDATE;
		
		private EntitySet<TBL_POSITION> _TBL_POSITIONs;
		
		private EntitySet<TBL_USER> _TBL_USERs;
		
		private EntityRef<TBL_DPT> _TBL_DPT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AREAChanging(int value);
    partial void OnID_AREAChanged();
    partial void OnID_DPTChanging(System.Nullable<int> value);
    partial void OnID_DPTChanged();
    partial void OnAREA_NAMEChanging(string value);
    partial void OnAREA_NAMEChanged();
    partial void OnAREA_STATEChanging(bool value);
    partial void OnAREA_STATEChanged();
    partial void OnAREA_CREATEBYChanging(string value);
    partial void OnAREA_CREATEBYChanged();
    partial void OnAREA_UPDATEDBYChanging(string value);
    partial void OnAREA_UPDATEDBYChanged();
    partial void OnAREA_CREATEDATEChanging(System.DateTime value);
    partial void OnAREA_CREATEDATEChanged();
    partial void OnAREA_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnAREA_UPDATEDATEChanged();
    #endregion
		
		public TBL_AREA()
		{
			this._TBL_POSITIONs = new EntitySet<TBL_POSITION>(new Action<TBL_POSITION>(this.attach_TBL_POSITIONs), new Action<TBL_POSITION>(this.detach_TBL_POSITIONs));
			this._TBL_USERs = new EntitySet<TBL_USER>(new Action<TBL_USER>(this.attach_TBL_USERs), new Action<TBL_USER>(this.detach_TBL_USERs));
			this._TBL_DPT = default(EntityRef<TBL_DPT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AREA", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_AREA
		{
			get
			{
				return this._ID_AREA;
			}
			set
			{
				if ((this._ID_AREA != value))
				{
					this.OnID_AREAChanging(value);
					this.SendPropertyChanging();
					this._ID_AREA = value;
					this.SendPropertyChanged("ID_AREA");
					this.OnID_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DPT", DbType="Int")]
		public System.Nullable<int> ID_DPT
		{
			get
			{
				return this._ID_DPT;
			}
			set
			{
				if ((this._ID_DPT != value))
				{
					if (this._TBL_DPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DPTChanging(value);
					this.SendPropertyChanging();
					this._ID_DPT = value;
					this.SendPropertyChanged("ID_DPT");
					this.OnID_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string AREA_NAME
		{
			get
			{
				return this._AREA_NAME;
			}
			set
			{
				if ((this._AREA_NAME != value))
				{
					this.OnAREA_NAMEChanging(value);
					this.SendPropertyChanging();
					this._AREA_NAME = value;
					this.SendPropertyChanged("AREA_NAME");
					this.OnAREA_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_STATE", DbType="Bit NOT NULL")]
		public bool AREA_STATE
		{
			get
			{
				return this._AREA_STATE;
			}
			set
			{
				if ((this._AREA_STATE != value))
				{
					this.OnAREA_STATEChanging(value);
					this.SendPropertyChanging();
					this._AREA_STATE = value;
					this.SendPropertyChanged("AREA_STATE");
					this.OnAREA_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AREA_CREATEBY
		{
			get
			{
				return this._AREA_CREATEBY;
			}
			set
			{
				if ((this._AREA_CREATEBY != value))
				{
					this.OnAREA_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._AREA_CREATEBY = value;
					this.SendPropertyChanged("AREA_CREATEBY");
					this.OnAREA_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_UPDATEDBY", DbType="VarChar(50)")]
		public string AREA_UPDATEDBY
		{
			get
			{
				return this._AREA_UPDATEDBY;
			}
			set
			{
				if ((this._AREA_UPDATEDBY != value))
				{
					this.OnAREA_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._AREA_UPDATEDBY = value;
					this.SendPropertyChanged("AREA_UPDATEDBY");
					this.OnAREA_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime AREA_CREATEDATE
		{
			get
			{
				return this._AREA_CREATEDATE;
			}
			set
			{
				if ((this._AREA_CREATEDATE != value))
				{
					this.OnAREA_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._AREA_CREATEDATE = value;
					this.SendPropertyChanged("AREA_CREATEDATE");
					this.OnAREA_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> AREA_UPDATEDATE
		{
			get
			{
				return this._AREA_UPDATEDATE;
			}
			set
			{
				if ((this._AREA_UPDATEDATE != value))
				{
					this.OnAREA_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._AREA_UPDATEDATE = value;
					this.SendPropertyChanged("AREA_UPDATEDATE");
					this.OnAREA_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_AREA_TBL_POSITION", Storage="_TBL_POSITIONs", ThisKey="ID_AREA", OtherKey="ID_AREA")]
		public EntitySet<TBL_POSITION> TBL_POSITIONs
		{
			get
			{
				return this._TBL_POSITIONs;
			}
			set
			{
				this._TBL_POSITIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_AREA_TBL_USER", Storage="_TBL_USERs", ThisKey="ID_AREA", OtherKey="ID_AREA")]
		public EntitySet<TBL_USER> TBL_USERs
		{
			get
			{
				return this._TBL_USERs;
			}
			set
			{
				this._TBL_USERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_DPT_TBL_AREA", Storage="_TBL_DPT", ThisKey="ID_DPT", OtherKey="ID_DPT", IsForeignKey=true)]
		public TBL_DPT TBL_DPT
		{
			get
			{
				return this._TBL_DPT.Entity;
			}
			set
			{
				TBL_DPT previousValue = this._TBL_DPT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_DPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_DPT.Entity = null;
						previousValue.TBL_AREAs.Remove(this);
					}
					this._TBL_DPT.Entity = value;
					if ((value != null))
					{
						value.TBL_AREAs.Add(this);
						this._ID_DPT = value.ID_DPT;
					}
					else
					{
						this._ID_DPT = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_DPT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_POSITIONs(TBL_POSITION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_AREA = this;
		}
		
		private void detach_TBL_POSITIONs(TBL_POSITION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_AREA = null;
		}
		
		private void attach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_AREA = this;
		}
		
		private void detach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_AREA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_CUSTOMER")]
	public partial class TBL_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_CUSTOMER;
		
		private string _CUSTOMER_NAME;
		
		private bool _CUSTOMER_STATE;
		
		private string _CUSTOMER_CREATEBY;
		
		private string _CUSTOMER_UPDATEDBY;
		
		private System.DateTime _CUSTOMER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _CUSTOMER_UPDATEDATE;
		
		private EntitySet<TBL_PREPAID> _TBL_PREPAIDs;
		
		private EntitySet<TBL_CXC> _TBL_CXCs;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CUSTOMERChanging(string value);
    partial void OnID_CUSTOMERChanged();
    partial void OnCUSTOMER_NAMEChanging(string value);
    partial void OnCUSTOMER_NAMEChanged();
    partial void OnCUSTOMER_STATEChanging(bool value);
    partial void OnCUSTOMER_STATEChanged();
    partial void OnCUSTOMER_CREATEBYChanging(string value);
    partial void OnCUSTOMER_CREATEBYChanged();
    partial void OnCUSTOMER_UPDATEDBYChanging(string value);
    partial void OnCUSTOMER_UPDATEDBYChanged();
    partial void OnCUSTOMER_CREATEDATEChanging(System.DateTime value);
    partial void OnCUSTOMER_CREATEDATEChanged();
    partial void OnCUSTOMER_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCUSTOMER_UPDATEDATEChanged();
    #endregion
		
		public TBL_CUSTOMER()
		{
			this._TBL_PREPAIDs = new EntitySet<TBL_PREPAID>(new Action<TBL_PREPAID>(this.attach_TBL_PREPAIDs), new Action<TBL_PREPAID>(this.detach_TBL_PREPAIDs));
			this._TBL_CXCs = new EntitySet<TBL_CXC>(new Action<TBL_CXC>(this.attach_TBL_CXCs), new Action<TBL_CXC>(this.detach_TBL_CXCs));
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					this.OnID_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_CUSTOMER = value;
					this.SendPropertyChanged("ID_CUSTOMER");
					this.OnID_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this.OnCUSTOMER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_NAME = value;
					this.SendPropertyChanged("CUSTOMER_NAME");
					this.OnCUSTOMER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_STATE", DbType="Bit NOT NULL")]
		public bool CUSTOMER_STATE
		{
			get
			{
				return this._CUSTOMER_STATE;
			}
			set
			{
				if ((this._CUSTOMER_STATE != value))
				{
					this.OnCUSTOMER_STATEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_STATE = value;
					this.SendPropertyChanged("CUSTOMER_STATE");
					this.OnCUSTOMER_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_CREATEBY
		{
			get
			{
				return this._CUSTOMER_CREATEBY;
			}
			set
			{
				if ((this._CUSTOMER_CREATEBY != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUSTOMER_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_CREATEBY = value;
					this.SendPropertyChanged("CUSTOMER_CREATEBY");
					this.OnCUSTOMER_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_UPDATEDBY", DbType="VarChar(50)")]
		public string CUSTOMER_UPDATEDBY
		{
			get
			{
				return this._CUSTOMER_UPDATEDBY;
			}
			set
			{
				if ((this._CUSTOMER_UPDATEDBY != value))
				{
					this.OnCUSTOMER_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_UPDATEDBY = value;
					this.SendPropertyChanged("CUSTOMER_UPDATEDBY");
					this.OnCUSTOMER_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CUSTOMER_CREATEDATE
		{
			get
			{
				return this._CUSTOMER_CREATEDATE;
			}
			set
			{
				if ((this._CUSTOMER_CREATEDATE != value))
				{
					this.OnCUSTOMER_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_CREATEDATE = value;
					this.SendPropertyChanged("CUSTOMER_CREATEDATE");
					this.OnCUSTOMER_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CUSTOMER_UPDATEDATE
		{
			get
			{
				return this._CUSTOMER_UPDATEDATE;
			}
			set
			{
				if ((this._CUSTOMER_UPDATEDATE != value))
				{
					this.OnCUSTOMER_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_UPDATEDATE = value;
					this.SendPropertyChanged("CUSTOMER_UPDATEDATE");
					this.OnCUSTOMER_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CUSTOMER_TBL_PREPAID", Storage="_TBL_PREPAIDs", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER")]
		public EntitySet<TBL_PREPAID> TBL_PREPAIDs
		{
			get
			{
				return this._TBL_PREPAIDs;
			}
			set
			{
				this._TBL_PREPAIDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CUSTOMER_TBL_CXC", Storage="_TBL_CXCs", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER")]
		public EntitySet<TBL_CXC> TBL_CXCs
		{
			get
			{
				return this._TBL_CXCs;
			}
			set
			{
				this._TBL_CXCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_CUSTOMER", Storage="_TBL_USER", ThisKey="CUSTOMER_CREATEBY", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_CUSTOMERs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_CUSTOMERs.Add(this);
						this._CUSTOMER_CREATEBY = value.ID_USER;
					}
					else
					{
						this._CUSTOMER_CREATEBY = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_PREPAIDs(TBL_PREPAID entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CUSTOMER = this;
		}
		
		private void detach_TBL_PREPAIDs(TBL_PREPAID entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CUSTOMER = null;
		}
		
		private void attach_TBL_CXCs(TBL_CXC entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CUSTOMER = this;
		}
		
		private void detach_TBL_CXCs(TBL_CXC entity)
		{
			this.SendPropertyChanging();
			entity.TBL_CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_DPT")]
	public partial class TBL_DPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_DPT;
		
		private string _NAME_DPT;
		
		private bool _STATE_DPT;
		
		private string _CREATEBY_DPT;
		
		private string _UPDATEBY_DPT;
		
		private System.DateTime _CREATEDATE_DPT;
		
		private System.Nullable<System.DateTime> _UPDATEDATE_DPT;
		
		private EntitySet<TBL_AREA> _TBL_AREAs;
		
		private EntitySet<TBL_PERMISSION> _TBL_PERMISSIONs;
		
		private EntitySet<TBL_USER> _TBL_USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DPTChanging(int value);
    partial void OnID_DPTChanged();
    partial void OnNAME_DPTChanging(string value);
    partial void OnNAME_DPTChanged();
    partial void OnSTATE_DPTChanging(bool value);
    partial void OnSTATE_DPTChanged();
    partial void OnCREATEBY_DPTChanging(string value);
    partial void OnCREATEBY_DPTChanged();
    partial void OnUPDATEBY_DPTChanging(string value);
    partial void OnUPDATEBY_DPTChanged();
    partial void OnCREATEDATE_DPTChanging(System.DateTime value);
    partial void OnCREATEDATE_DPTChanged();
    partial void OnUPDATEDATE_DPTChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATEDATE_DPTChanged();
    #endregion
		
		public TBL_DPT()
		{
			this._TBL_AREAs = new EntitySet<TBL_AREA>(new Action<TBL_AREA>(this.attach_TBL_AREAs), new Action<TBL_AREA>(this.detach_TBL_AREAs));
			this._TBL_PERMISSIONs = new EntitySet<TBL_PERMISSION>(new Action<TBL_PERMISSION>(this.attach_TBL_PERMISSIONs), new Action<TBL_PERMISSION>(this.detach_TBL_PERMISSIONs));
			this._TBL_USERs = new EntitySet<TBL_USER>(new Action<TBL_USER>(this.attach_TBL_USERs), new Action<TBL_USER>(this.detach_TBL_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DPT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_DPT
		{
			get
			{
				return this._ID_DPT;
			}
			set
			{
				if ((this._ID_DPT != value))
				{
					this.OnID_DPTChanging(value);
					this.SendPropertyChanging();
					this._ID_DPT = value;
					this.SendPropertyChanged("ID_DPT");
					this.OnID_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_DPT", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string NAME_DPT
		{
			get
			{
				return this._NAME_DPT;
			}
			set
			{
				if ((this._NAME_DPT != value))
				{
					this.OnNAME_DPTChanging(value);
					this.SendPropertyChanging();
					this._NAME_DPT = value;
					this.SendPropertyChanged("NAME_DPT");
					this.OnNAME_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_DPT", DbType="Bit NOT NULL")]
		public bool STATE_DPT
		{
			get
			{
				return this._STATE_DPT;
			}
			set
			{
				if ((this._STATE_DPT != value))
				{
					this.OnSTATE_DPTChanging(value);
					this.SendPropertyChanging();
					this._STATE_DPT = value;
					this.SendPropertyChanged("STATE_DPT");
					this.OnSTATE_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEBY_DPT", DbType="VarChar(50)")]
		public string CREATEBY_DPT
		{
			get
			{
				return this._CREATEBY_DPT;
			}
			set
			{
				if ((this._CREATEBY_DPT != value))
				{
					this.OnCREATEBY_DPTChanging(value);
					this.SendPropertyChanging();
					this._CREATEBY_DPT = value;
					this.SendPropertyChanged("CREATEBY_DPT");
					this.OnCREATEBY_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEBY_DPT", DbType="VarChar(50)")]
		public string UPDATEBY_DPT
		{
			get
			{
				return this._UPDATEBY_DPT;
			}
			set
			{
				if ((this._UPDATEBY_DPT != value))
				{
					this.OnUPDATEBY_DPTChanging(value);
					this.SendPropertyChanging();
					this._UPDATEBY_DPT = value;
					this.SendPropertyChanged("UPDATEBY_DPT");
					this.OnUPDATEBY_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDATE_DPT", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDATE_DPT
		{
			get
			{
				return this._CREATEDATE_DPT;
			}
			set
			{
				if ((this._CREATEDATE_DPT != value))
				{
					this.OnCREATEDATE_DPTChanging(value);
					this.SendPropertyChanging();
					this._CREATEDATE_DPT = value;
					this.SendPropertyChanged("CREATEDATE_DPT");
					this.OnCREATEDATE_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE_DPT", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE_DPT
		{
			get
			{
				return this._UPDATEDATE_DPT;
			}
			set
			{
				if ((this._UPDATEDATE_DPT != value))
				{
					this.OnUPDATEDATE_DPTChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE_DPT = value;
					this.SendPropertyChanged("UPDATEDATE_DPT");
					this.OnUPDATEDATE_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_DPT_TBL_AREA", Storage="_TBL_AREAs", ThisKey="ID_DPT", OtherKey="ID_DPT")]
		public EntitySet<TBL_AREA> TBL_AREAs
		{
			get
			{
				return this._TBL_AREAs;
			}
			set
			{
				this._TBL_AREAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_DPT_TBL_PERMISSION", Storage="_TBL_PERMISSIONs", ThisKey="ID_DPT", OtherKey="ID_DPT")]
		public EntitySet<TBL_PERMISSION> TBL_PERMISSIONs
		{
			get
			{
				return this._TBL_PERMISSIONs;
			}
			set
			{
				this._TBL_PERMISSIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_DPT_TBL_USER", Storage="_TBL_USERs", ThisKey="ID_DPT", OtherKey="ID_DPT")]
		public EntitySet<TBL_USER> TBL_USERs
		{
			get
			{
				return this._TBL_USERs;
			}
			set
			{
				this._TBL_USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_AREAs(TBL_AREA entity)
		{
			this.SendPropertyChanging();
			entity.TBL_DPT = this;
		}
		
		private void detach_TBL_AREAs(TBL_AREA entity)
		{
			this.SendPropertyChanging();
			entity.TBL_DPT = null;
		}
		
		private void attach_TBL_PERMISSIONs(TBL_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_DPT = this;
		}
		
		private void detach_TBL_PERMISSIONs(TBL_PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_DPT = null;
		}
		
		private void attach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_DPT = this;
		}
		
		private void detach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_DPT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_PERMISSION")]
	public partial class TBL_PERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PER;
		
		private System.Nullable<int> _ID_DPT;
		
		private string _NAME_PERMISSION;
		
		private string _DESCRIP_PERMISSION;
		
		private System.Nullable<bool> _PER_STATE;
		
		private string _PER_CREATEBY;
		
		private string _PER_UPDATEDBY;
		
		private System.DateTime _PER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _PER_UPDATEDATE;
		
		private EntityRef<TBL_DPT> _TBL_DPT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PERChanging(int value);
    partial void OnID_PERChanged();
    partial void OnID_DPTChanging(System.Nullable<int> value);
    partial void OnID_DPTChanged();
    partial void OnNAME_PERMISSIONChanging(string value);
    partial void OnNAME_PERMISSIONChanged();
    partial void OnDESCRIP_PERMISSIONChanging(string value);
    partial void OnDESCRIP_PERMISSIONChanged();
    partial void OnPER_STATEChanging(System.Nullable<bool> value);
    partial void OnPER_STATEChanged();
    partial void OnPER_CREATEBYChanging(string value);
    partial void OnPER_CREATEBYChanged();
    partial void OnPER_UPDATEDBYChanging(string value);
    partial void OnPER_UPDATEDBYChanged();
    partial void OnPER_CREATEDATEChanging(System.DateTime value);
    partial void OnPER_CREATEDATEChanged();
    partial void OnPER_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPER_UPDATEDATEChanged();
    #endregion
		
		public TBL_PERMISSION()
		{
			this._TBL_DPT = default(EntityRef<TBL_DPT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PER", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PER
		{
			get
			{
				return this._ID_PER;
			}
			set
			{
				if ((this._ID_PER != value))
				{
					this.OnID_PERChanging(value);
					this.SendPropertyChanging();
					this._ID_PER = value;
					this.SendPropertyChanged("ID_PER");
					this.OnID_PERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DPT", DbType="Int")]
		public System.Nullable<int> ID_DPT
		{
			get
			{
				return this._ID_DPT;
			}
			set
			{
				if ((this._ID_DPT != value))
				{
					if (this._TBL_DPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DPTChanging(value);
					this.SendPropertyChanging();
					this._ID_DPT = value;
					this.SendPropertyChanged("ID_DPT");
					this.OnID_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_PERMISSION", DbType="VarChar(15)")]
		public string NAME_PERMISSION
		{
			get
			{
				return this._NAME_PERMISSION;
			}
			set
			{
				if ((this._NAME_PERMISSION != value))
				{
					this.OnNAME_PERMISSIONChanging(value);
					this.SendPropertyChanging();
					this._NAME_PERMISSION = value;
					this.SendPropertyChanged("NAME_PERMISSION");
					this.OnNAME_PERMISSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PERMISSION", DbType="VarChar(100)")]
		public string DESCRIP_PERMISSION
		{
			get
			{
				return this._DESCRIP_PERMISSION;
			}
			set
			{
				if ((this._DESCRIP_PERMISSION != value))
				{
					this.OnDESCRIP_PERMISSIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIP_PERMISSION = value;
					this.SendPropertyChanged("DESCRIP_PERMISSION");
					this.OnDESCRIP_PERMISSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_STATE", DbType="Bit")]
		public System.Nullable<bool> PER_STATE
		{
			get
			{
				return this._PER_STATE;
			}
			set
			{
				if ((this._PER_STATE != value))
				{
					this.OnPER_STATEChanging(value);
					this.SendPropertyChanging();
					this._PER_STATE = value;
					this.SendPropertyChanged("PER_STATE");
					this.OnPER_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PER_CREATEBY
		{
			get
			{
				return this._PER_CREATEBY;
			}
			set
			{
				if ((this._PER_CREATEBY != value))
				{
					this.OnPER_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._PER_CREATEBY = value;
					this.SendPropertyChanged("PER_CREATEBY");
					this.OnPER_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_UPDATEDBY", DbType="VarChar(50)")]
		public string PER_UPDATEDBY
		{
			get
			{
				return this._PER_UPDATEDBY;
			}
			set
			{
				if ((this._PER_UPDATEDBY != value))
				{
					this.OnPER_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._PER_UPDATEDBY = value;
					this.SendPropertyChanged("PER_UPDATEDBY");
					this.OnPER_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime PER_CREATEDATE
		{
			get
			{
				return this._PER_CREATEDATE;
			}
			set
			{
				if ((this._PER_CREATEDATE != value))
				{
					this.OnPER_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._PER_CREATEDATE = value;
					this.SendPropertyChanged("PER_CREATEDATE");
					this.OnPER_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PER_UPDATEDATE
		{
			get
			{
				return this._PER_UPDATEDATE;
			}
			set
			{
				if ((this._PER_UPDATEDATE != value))
				{
					this.OnPER_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._PER_UPDATEDATE = value;
					this.SendPropertyChanged("PER_UPDATEDATE");
					this.OnPER_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_DPT_TBL_PERMISSION", Storage="_TBL_DPT", ThisKey="ID_DPT", OtherKey="ID_DPT", IsForeignKey=true)]
		public TBL_DPT TBL_DPT
		{
			get
			{
				return this._TBL_DPT.Entity;
			}
			set
			{
				TBL_DPT previousValue = this._TBL_DPT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_DPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_DPT.Entity = null;
						previousValue.TBL_PERMISSIONs.Remove(this);
					}
					this._TBL_DPT.Entity = value;
					if ((value != null))
					{
						value.TBL_PERMISSIONs.Add(this);
						this._ID_DPT = value.ID_DPT;
					}
					else
					{
						this._ID_DPT = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBL_DPT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_POSITION")]
	public partial class TBL_POSITION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_POSITION;
		
		private int _ID_AREA;
		
		private string _NAME_POSITION;
		
		private bool _POSITION_STATE;
		
		private string _POSITION_CREATEBY;
		
		private string _POSITION_UPDATEDBY;
		
		private System.DateTime _POSITION_CREATEDATE;
		
		private System.Nullable<System.DateTime> _POSITION_UPDATEDATE;
		
		private EntitySet<TBL_USER> _TBL_USERs;
		
		private EntityRef<TBL_AREA> _TBL_AREA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_POSITIONChanging(int value);
    partial void OnID_POSITIONChanged();
    partial void OnID_AREAChanging(int value);
    partial void OnID_AREAChanged();
    partial void OnNAME_POSITIONChanging(string value);
    partial void OnNAME_POSITIONChanged();
    partial void OnPOSITION_STATEChanging(bool value);
    partial void OnPOSITION_STATEChanged();
    partial void OnPOSITION_CREATEBYChanging(string value);
    partial void OnPOSITION_CREATEBYChanged();
    partial void OnPOSITION_UPDATEDBYChanging(string value);
    partial void OnPOSITION_UPDATEDBYChanged();
    partial void OnPOSITION_CREATEDATEChanging(System.DateTime value);
    partial void OnPOSITION_CREATEDATEChanged();
    partial void OnPOSITION_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPOSITION_UPDATEDATEChanged();
    #endregion
		
		public TBL_POSITION()
		{
			this._TBL_USERs = new EntitySet<TBL_USER>(new Action<TBL_USER>(this.attach_TBL_USERs), new Action<TBL_USER>(this.detach_TBL_USERs));
			this._TBL_AREA = default(EntityRef<TBL_AREA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_POSITION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_POSITION
		{
			get
			{
				return this._ID_POSITION;
			}
			set
			{
				if ((this._ID_POSITION != value))
				{
					this.OnID_POSITIONChanging(value);
					this.SendPropertyChanging();
					this._ID_POSITION = value;
					this.SendPropertyChanged("ID_POSITION");
					this.OnID_POSITIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AREA", DbType="Int NOT NULL")]
		public int ID_AREA
		{
			get
			{
				return this._ID_AREA;
			}
			set
			{
				if ((this._ID_AREA != value))
				{
					if (this._TBL_AREA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AREAChanging(value);
					this.SendPropertyChanging();
					this._ID_AREA = value;
					this.SendPropertyChanged("ID_AREA");
					this.OnID_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_POSITION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME_POSITION
		{
			get
			{
				return this._NAME_POSITION;
			}
			set
			{
				if ((this._NAME_POSITION != value))
				{
					this.OnNAME_POSITIONChanging(value);
					this.SendPropertyChanging();
					this._NAME_POSITION = value;
					this.SendPropertyChanged("NAME_POSITION");
					this.OnNAME_POSITIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_STATE", DbType="Bit NOT NULL")]
		public bool POSITION_STATE
		{
			get
			{
				return this._POSITION_STATE;
			}
			set
			{
				if ((this._POSITION_STATE != value))
				{
					this.OnPOSITION_STATEChanging(value);
					this.SendPropertyChanging();
					this._POSITION_STATE = value;
					this.SendPropertyChanged("POSITION_STATE");
					this.OnPOSITION_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string POSITION_CREATEBY
		{
			get
			{
				return this._POSITION_CREATEBY;
			}
			set
			{
				if ((this._POSITION_CREATEBY != value))
				{
					this.OnPOSITION_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._POSITION_CREATEBY = value;
					this.SendPropertyChanged("POSITION_CREATEBY");
					this.OnPOSITION_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_UPDATEDBY", DbType="VarChar(50)")]
		public string POSITION_UPDATEDBY
		{
			get
			{
				return this._POSITION_UPDATEDBY;
			}
			set
			{
				if ((this._POSITION_UPDATEDBY != value))
				{
					this.OnPOSITION_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._POSITION_UPDATEDBY = value;
					this.SendPropertyChanged("POSITION_UPDATEDBY");
					this.OnPOSITION_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime POSITION_CREATEDATE
		{
			get
			{
				return this._POSITION_CREATEDATE;
			}
			set
			{
				if ((this._POSITION_CREATEDATE != value))
				{
					this.OnPOSITION_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._POSITION_CREATEDATE = value;
					this.SendPropertyChanged("POSITION_CREATEDATE");
					this.OnPOSITION_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> POSITION_UPDATEDATE
		{
			get
			{
				return this._POSITION_UPDATEDATE;
			}
			set
			{
				if ((this._POSITION_UPDATEDATE != value))
				{
					this.OnPOSITION_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._POSITION_UPDATEDATE = value;
					this.SendPropertyChanged("POSITION_UPDATEDATE");
					this.OnPOSITION_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_POSITION_TBL_USER", Storage="_TBL_USERs", ThisKey="ID_POSITION", OtherKey="ID_POSITION")]
		public EntitySet<TBL_USER> TBL_USERs
		{
			get
			{
				return this._TBL_USERs;
			}
			set
			{
				this._TBL_USERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_AREA_TBL_POSITION", Storage="_TBL_AREA", ThisKey="ID_AREA", OtherKey="ID_AREA", IsForeignKey=true)]
		public TBL_AREA TBL_AREA
		{
			get
			{
				return this._TBL_AREA.Entity;
			}
			set
			{
				TBL_AREA previousValue = this._TBL_AREA.Entity;
				if (((previousValue != value) 
							|| (this._TBL_AREA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_AREA.Entity = null;
						previousValue.TBL_POSITIONs.Remove(this);
					}
					this._TBL_AREA.Entity = value;
					if ((value != null))
					{
						value.TBL_POSITIONs.Add(this);
						this._ID_AREA = value.ID_AREA;
					}
					else
					{
						this._ID_AREA = default(int);
					}
					this.SendPropertyChanged("TBL_AREA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_POSITION = this;
		}
		
		private void detach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_POSITION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_PREPAID")]
	public partial class TBL_PREPAID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PREPAID;
		
		private string _ID_CUSTOMER;
		
		private int _ID_PRODUCT;
		
		private int _PREPAID_QUANTITY;
		
		private decimal _PREPAID_TOTAL;
		
		private decimal _PREPAID_CASH;
		
		private decimal _PREPAID_CHANGE;
		
		private int _PREPAID_BALANCE;
		
		private bool _PREPAID_STATE;
		
		private string _PREPAID_CREATEBY;
		
		private string _PREPAID_UPDATEDBY;
		
		private System.DateTime _PREPAID_CREATEDATE;
		
		private System.Nullable<System.DateTime> _PREPAID_UPDATEDATE;
		
		private EntitySet<TBL_ORDER> _TBL_ORDERs;
		
		private EntityRef<TBL_CUSTOMER> _TBL_CUSTOMER;
		
		private EntityRef<TBL_PRODUCT> _TBL_PRODUCT;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PREPAIDChanging(int value);
    partial void OnID_PREPAIDChanged();
    partial void OnID_CUSTOMERChanging(string value);
    partial void OnID_CUSTOMERChanged();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnPREPAID_QUANTITYChanging(int value);
    partial void OnPREPAID_QUANTITYChanged();
    partial void OnPREPAID_TOTALChanging(decimal value);
    partial void OnPREPAID_TOTALChanged();
    partial void OnPREPAID_CASHChanging(decimal value);
    partial void OnPREPAID_CASHChanged();
    partial void OnPREPAID_CHANGEChanging(decimal value);
    partial void OnPREPAID_CHANGEChanged();
    partial void OnPREPAID_BALANCEChanging(int value);
    partial void OnPREPAID_BALANCEChanged();
    partial void OnPREPAID_STATEChanging(bool value);
    partial void OnPREPAID_STATEChanged();
    partial void OnPREPAID_CREATEBYChanging(string value);
    partial void OnPREPAID_CREATEBYChanged();
    partial void OnPREPAID_UPDATEDBYChanging(string value);
    partial void OnPREPAID_UPDATEDBYChanged();
    partial void OnPREPAID_CREATEDATEChanging(System.DateTime value);
    partial void OnPREPAID_CREATEDATEChanged();
    partial void OnPREPAID_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPREPAID_UPDATEDATEChanged();
    #endregion
		
		public TBL_PREPAID()
		{
			this._TBL_ORDERs = new EntitySet<TBL_ORDER>(new Action<TBL_ORDER>(this.attach_TBL_ORDERs), new Action<TBL_ORDER>(this.detach_TBL_ORDERs));
			this._TBL_CUSTOMER = default(EntityRef<TBL_CUSTOMER>);
			this._TBL_PRODUCT = default(EntityRef<TBL_PRODUCT>);
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PREPAID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_PREPAID
		{
			get
			{
				return this._ID_PREPAID;
			}
			set
			{
				if ((this._ID_PREPAID != value))
				{
					this.OnID_PREPAIDChanging(value);
					this.SendPropertyChanging();
					this._ID_PREPAID = value;
					this.SendPropertyChanged("ID_PREPAID");
					this.OnID_PREPAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					if (this._TBL_CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_CUSTOMER = value;
					this.SendPropertyChanged("ID_CUSTOMER");
					this.OnID_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Int NOT NULL")]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					if (this._TBL_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_QUANTITY", DbType="Int NOT NULL")]
		public int PREPAID_QUANTITY
		{
			get
			{
				return this._PREPAID_QUANTITY;
			}
			set
			{
				if ((this._PREPAID_QUANTITY != value))
				{
					this.OnPREPAID_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_QUANTITY = value;
					this.SendPropertyChanged("PREPAID_QUANTITY");
					this.OnPREPAID_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_TOTAL", DbType="Money NOT NULL")]
		public decimal PREPAID_TOTAL
		{
			get
			{
				return this._PREPAID_TOTAL;
			}
			set
			{
				if ((this._PREPAID_TOTAL != value))
				{
					this.OnPREPAID_TOTALChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_TOTAL = value;
					this.SendPropertyChanged("PREPAID_TOTAL");
					this.OnPREPAID_TOTALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CASH", DbType="Money NOT NULL")]
		public decimal PREPAID_CASH
		{
			get
			{
				return this._PREPAID_CASH;
			}
			set
			{
				if ((this._PREPAID_CASH != value))
				{
					this.OnPREPAID_CASHChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_CASH = value;
					this.SendPropertyChanged("PREPAID_CASH");
					this.OnPREPAID_CASHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CHANGE", DbType="Money NOT NULL")]
		public decimal PREPAID_CHANGE
		{
			get
			{
				return this._PREPAID_CHANGE;
			}
			set
			{
				if ((this._PREPAID_CHANGE != value))
				{
					this.OnPREPAID_CHANGEChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_CHANGE = value;
					this.SendPropertyChanged("PREPAID_CHANGE");
					this.OnPREPAID_CHANGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_BALANCE", DbType="Int NOT NULL")]
		public int PREPAID_BALANCE
		{
			get
			{
				return this._PREPAID_BALANCE;
			}
			set
			{
				if ((this._PREPAID_BALANCE != value))
				{
					this.OnPREPAID_BALANCEChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_BALANCE = value;
					this.SendPropertyChanged("PREPAID_BALANCE");
					this.OnPREPAID_BALANCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_STATE", DbType="Bit NOT NULL")]
		public bool PREPAID_STATE
		{
			get
			{
				return this._PREPAID_STATE;
			}
			set
			{
				if ((this._PREPAID_STATE != value))
				{
					this.OnPREPAID_STATEChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_STATE = value;
					this.SendPropertyChanged("PREPAID_STATE");
					this.OnPREPAID_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PREPAID_CREATEBY
		{
			get
			{
				return this._PREPAID_CREATEBY;
			}
			set
			{
				if ((this._PREPAID_CREATEBY != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPREPAID_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_CREATEBY = value;
					this.SendPropertyChanged("PREPAID_CREATEBY");
					this.OnPREPAID_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_UPDATEDBY", DbType="VarChar(50)")]
		public string PREPAID_UPDATEDBY
		{
			get
			{
				return this._PREPAID_UPDATEDBY;
			}
			set
			{
				if ((this._PREPAID_UPDATEDBY != value))
				{
					this.OnPREPAID_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_UPDATEDBY = value;
					this.SendPropertyChanged("PREPAID_UPDATEDBY");
					this.OnPREPAID_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime PREPAID_CREATEDATE
		{
			get
			{
				return this._PREPAID_CREATEDATE;
			}
			set
			{
				if ((this._PREPAID_CREATEDATE != value))
				{
					this.OnPREPAID_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_CREATEDATE = value;
					this.SendPropertyChanged("PREPAID_CREATEDATE");
					this.OnPREPAID_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PREPAID_UPDATEDATE
		{
			get
			{
				return this._PREPAID_UPDATEDATE;
			}
			set
			{
				if ((this._PREPAID_UPDATEDATE != value))
				{
					this.OnPREPAID_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._PREPAID_UPDATEDATE = value;
					this.SendPropertyChanged("PREPAID_UPDATEDATE");
					this.OnPREPAID_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PREPAID_TBL_ORDER", Storage="_TBL_ORDERs", ThisKey="ID_PREPAID", OtherKey="ID_PREPAID")]
		public EntitySet<TBL_ORDER> TBL_ORDERs
		{
			get
			{
				return this._TBL_ORDERs;
			}
			set
			{
				this._TBL_ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CUSTOMER_TBL_PREPAID", Storage="_TBL_CUSTOMER", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER", IsForeignKey=true)]
		public TBL_CUSTOMER TBL_CUSTOMER
		{
			get
			{
				return this._TBL_CUSTOMER.Entity;
			}
			set
			{
				TBL_CUSTOMER previousValue = this._TBL_CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_CUSTOMER.Entity = null;
						previousValue.TBL_PREPAIDs.Remove(this);
					}
					this._TBL_CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.TBL_PREPAIDs.Add(this);
						this._ID_CUSTOMER = value.ID_CUSTOMER;
					}
					else
					{
						this._ID_CUSTOMER = default(string);
					}
					this.SendPropertyChanged("TBL_CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_PREPAID", Storage="_TBL_PRODUCT", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT", IsForeignKey=true)]
		public TBL_PRODUCT TBL_PRODUCT
		{
			get
			{
				return this._TBL_PRODUCT.Entity;
			}
			set
			{
				TBL_PRODUCT previousValue = this._TBL_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_PRODUCT.Entity = null;
						previousValue.TBL_PREPAIDs.Remove(this);
					}
					this._TBL_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBL_PREPAIDs.Add(this);
						this._ID_PRODUCT = value.ID_PRODUCT;
					}
					else
					{
						this._ID_PRODUCT = default(int);
					}
					this.SendPropertyChanged("TBL_PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_PREPAID", Storage="_TBL_USER", ThisKey="PREPAID_CREATEBY", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_PREPAIDs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_PREPAIDs.Add(this);
						this._PREPAID_CREATEBY = value.ID_USER;
					}
					else
					{
						this._PREPAID_CREATEBY = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_ORDERs(TBL_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PREPAID = this;
		}
		
		private void detach_TBL_ORDERs(TBL_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PREPAID = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_PRODUCT")]
	public partial class TBL_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_PRODUCT;
		
		private decimal _TOTAL_PRODUCT;
		
		private string _DESCRIP_PRICE;
		
		private bool _PRODUCT_STATE;
		
		private string _PRODUCT_CREATEBY;
		
		private string _PRODUCT_UPDATEDBY;
		
		private System.DateTime _PRODUCT_CREATEDATE;
		
		private System.Nullable<System.DateTime> _PRODUCT_UPDATEDATE;
		
		private EntitySet<TBL_PREPAID> _TBL_PREPAIDs;
		
		private EntitySet<TBL_RECEIPT> _TBL_RECEIPTs;
		
		private EntitySet<TBL_STOCK> _TBL_STOCKs;
		
		private EntitySet<TBL_CXC> _TBL_CXCs;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnTOTAL_PRODUCTChanging(decimal value);
    partial void OnTOTAL_PRODUCTChanged();
    partial void OnDESCRIP_PRICEChanging(string value);
    partial void OnDESCRIP_PRICEChanged();
    partial void OnPRODUCT_STATEChanging(bool value);
    partial void OnPRODUCT_STATEChanged();
    partial void OnPRODUCT_CREATEBYChanging(string value);
    partial void OnPRODUCT_CREATEBYChanged();
    partial void OnPRODUCT_UPDATEDBYChanging(string value);
    partial void OnPRODUCT_UPDATEDBYChanged();
    partial void OnPRODUCT_CREATEDATEChanging(System.DateTime value);
    partial void OnPRODUCT_CREATEDATEChanged();
    partial void OnPRODUCT_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnPRODUCT_UPDATEDATEChanged();
    #endregion
		
		public TBL_PRODUCT()
		{
			this._TBL_PREPAIDs = new EntitySet<TBL_PREPAID>(new Action<TBL_PREPAID>(this.attach_TBL_PREPAIDs), new Action<TBL_PREPAID>(this.detach_TBL_PREPAIDs));
			this._TBL_RECEIPTs = new EntitySet<TBL_RECEIPT>(new Action<TBL_RECEIPT>(this.attach_TBL_RECEIPTs), new Action<TBL_RECEIPT>(this.detach_TBL_RECEIPTs));
			this._TBL_STOCKs = new EntitySet<TBL_STOCK>(new Action<TBL_STOCK>(this.attach_TBL_STOCKs), new Action<TBL_STOCK>(this.detach_TBL_STOCKs));
			this._TBL_CXCs = new EntitySet<TBL_CXC>(new Action<TBL_CXC>(this.attach_TBL_CXCs), new Action<TBL_CXC>(this.detach_TBL_CXCs));
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRODUCT", DbType="Money NOT NULL")]
		public decimal TOTAL_PRODUCT
		{
			get
			{
				return this._TOTAL_PRODUCT;
			}
			set
			{
				if ((this._TOTAL_PRODUCT != value))
				{
					this.OnTOTAL_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PRODUCT = value;
					this.SendPropertyChanged("TOTAL_PRODUCT");
					this.OnTOTAL_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PRICE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_PRICE
		{
			get
			{
				return this._DESCRIP_PRICE;
			}
			set
			{
				if ((this._DESCRIP_PRICE != value))
				{
					this.OnDESCRIP_PRICEChanging(value);
					this.SendPropertyChanging();
					this._DESCRIP_PRICE = value;
					this.SendPropertyChanged("DESCRIP_PRICE");
					this.OnDESCRIP_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_STATE", DbType="Bit NOT NULL")]
		public bool PRODUCT_STATE
		{
			get
			{
				return this._PRODUCT_STATE;
			}
			set
			{
				if ((this._PRODUCT_STATE != value))
				{
					this.OnPRODUCT_STATEChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_STATE = value;
					this.SendPropertyChanged("PRODUCT_STATE");
					this.OnPRODUCT_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRODUCT_CREATEBY
		{
			get
			{
				return this._PRODUCT_CREATEBY;
			}
			set
			{
				if ((this._PRODUCT_CREATEBY != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRODUCT_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_CREATEBY = value;
					this.SendPropertyChanged("PRODUCT_CREATEBY");
					this.OnPRODUCT_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_UPDATEDBY", DbType="VarChar(50)")]
		public string PRODUCT_UPDATEDBY
		{
			get
			{
				return this._PRODUCT_UPDATEDBY;
			}
			set
			{
				if ((this._PRODUCT_UPDATEDBY != value))
				{
					this.OnPRODUCT_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_UPDATEDBY = value;
					this.SendPropertyChanged("PRODUCT_UPDATEDBY");
					this.OnPRODUCT_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime PRODUCT_CREATEDATE
		{
			get
			{
				return this._PRODUCT_CREATEDATE;
			}
			set
			{
				if ((this._PRODUCT_CREATEDATE != value))
				{
					this.OnPRODUCT_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_CREATEDATE = value;
					this.SendPropertyChanged("PRODUCT_CREATEDATE");
					this.OnPRODUCT_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PRODUCT_UPDATEDATE
		{
			get
			{
				return this._PRODUCT_UPDATEDATE;
			}
			set
			{
				if ((this._PRODUCT_UPDATEDATE != value))
				{
					this.OnPRODUCT_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._PRODUCT_UPDATEDATE = value;
					this.SendPropertyChanged("PRODUCT_UPDATEDATE");
					this.OnPRODUCT_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_PREPAID", Storage="_TBL_PREPAIDs", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT")]
		public EntitySet<TBL_PREPAID> TBL_PREPAIDs
		{
			get
			{
				return this._TBL_PREPAIDs;
			}
			set
			{
				this._TBL_PREPAIDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_RECEIPT", Storage="_TBL_RECEIPTs", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT")]
		public EntitySet<TBL_RECEIPT> TBL_RECEIPTs
		{
			get
			{
				return this._TBL_RECEIPTs;
			}
			set
			{
				this._TBL_RECEIPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_STOCK", Storage="_TBL_STOCKs", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT")]
		public EntitySet<TBL_STOCK> TBL_STOCKs
		{
			get
			{
				return this._TBL_STOCKs;
			}
			set
			{
				this._TBL_STOCKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_CXC", Storage="_TBL_CXCs", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT")]
		public EntitySet<TBL_CXC> TBL_CXCs
		{
			get
			{
				return this._TBL_CXCs;
			}
			set
			{
				this._TBL_CXCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_PRODUCT", Storage="_TBL_USER", ThisKey="PRODUCT_CREATEBY", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_PRODUCTs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_PRODUCTs.Add(this);
						this._PRODUCT_CREATEBY = value.ID_USER;
					}
					else
					{
						this._PRODUCT_CREATEBY = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_PREPAIDs(TBL_PREPAID entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = this;
		}
		
		private void detach_TBL_PREPAIDs(TBL_PREPAID entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = null;
		}
		
		private void attach_TBL_RECEIPTs(TBL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = this;
		}
		
		private void detach_TBL_RECEIPTs(TBL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = null;
		}
		
		private void attach_TBL_STOCKs(TBL_STOCK entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = this;
		}
		
		private void detach_TBL_STOCKs(TBL_STOCK entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = null;
		}
		
		private void attach_TBL_CXCs(TBL_CXC entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = this;
		}
		
		private void detach_TBL_CXCs(TBL_CXC entity)
		{
			this.SendPropertyChanging();
			entity.TBL_PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_RECEIPT")]
	public partial class TBL_RECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_RECEIPT;
		
		private string _NAME_CUSTOMER;
		
		private System.DateTime _DATE_RECEIPT;
		
		private int _QUANTITY;
		
		private decimal _TOTAL_RECEIPT;
		
		private int _ID_PRODUCT;
		
		private decimal _UNIT_PRICE;
		
		private decimal _CASH;
		
		private decimal _CHANGE;
		
		private bool _RECEIPT_STATE;
		
		private string _RECEIPT_CREATEBY;
		
		private string _RECEIPT_UPDATEDBY;
		
		private System.DateTime _RECEIPT_CREATEDATE;
		
		private System.Nullable<System.DateTime> _RECEIPT_UPDATEDATE;
		
		private EntityRef<TBL_PRODUCT> _TBL_PRODUCT;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_RECEIPTChanging(int value);
    partial void OnID_RECEIPTChanged();
    partial void OnNAME_CUSTOMERChanging(string value);
    partial void OnNAME_CUSTOMERChanged();
    partial void OnDATE_RECEIPTChanging(System.DateTime value);
    partial void OnDATE_RECEIPTChanged();
    partial void OnQUANTITYChanging(int value);
    partial void OnQUANTITYChanged();
    partial void OnTOTAL_RECEIPTChanging(decimal value);
    partial void OnTOTAL_RECEIPTChanged();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnUNIT_PRICEChanging(decimal value);
    partial void OnUNIT_PRICEChanged();
    partial void OnCASHChanging(decimal value);
    partial void OnCASHChanged();
    partial void OnCHANGEChanging(decimal value);
    partial void OnCHANGEChanged();
    partial void OnRECEIPT_STATEChanging(bool value);
    partial void OnRECEIPT_STATEChanged();
    partial void OnRECEIPT_CREATEBYChanging(string value);
    partial void OnRECEIPT_CREATEBYChanged();
    partial void OnRECEIPT_UPDATEDBYChanging(string value);
    partial void OnRECEIPT_UPDATEDBYChanged();
    partial void OnRECEIPT_CREATEDATEChanging(System.DateTime value);
    partial void OnRECEIPT_CREATEDATEChanged();
    partial void OnRECEIPT_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRECEIPT_UPDATEDATEChanged();
    #endregion
		
		public TBL_RECEIPT()
		{
			this._TBL_PRODUCT = default(EntityRef<TBL_PRODUCT>);
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RECEIPT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_RECEIPT
		{
			get
			{
				return this._ID_RECEIPT;
			}
			set
			{
				if ((this._ID_RECEIPT != value))
				{
					this.OnID_RECEIPTChanging(value);
					this.SendPropertyChanging();
					this._ID_RECEIPT = value;
					this.SendPropertyChanged("ID_RECEIPT");
					this.OnID_RECEIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_CUSTOMER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME_CUSTOMER
		{
			get
			{
				return this._NAME_CUSTOMER;
			}
			set
			{
				if ((this._NAME_CUSTOMER != value))
				{
					this.OnNAME_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._NAME_CUSTOMER = value;
					this.SendPropertyChanged("NAME_CUSTOMER");
					this.OnNAME_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_RECEIPT", DbType="DateTime NOT NULL")]
		public System.DateTime DATE_RECEIPT
		{
			get
			{
				return this._DATE_RECEIPT;
			}
			set
			{
				if ((this._DATE_RECEIPT != value))
				{
					this.OnDATE_RECEIPTChanging(value);
					this.SendPropertyChanging();
					this._DATE_RECEIPT = value;
					this.SendPropertyChanged("DATE_RECEIPT");
					this.OnDATE_RECEIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_RECEIPT", DbType="Money NOT NULL")]
		public decimal TOTAL_RECEIPT
		{
			get
			{
				return this._TOTAL_RECEIPT;
			}
			set
			{
				if ((this._TOTAL_RECEIPT != value))
				{
					this.OnTOTAL_RECEIPTChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_RECEIPT = value;
					this.SendPropertyChanged("TOTAL_RECEIPT");
					this.OnTOTAL_RECEIPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Int NOT NULL")]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					if (this._TBL_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT_PRICE", DbType="Money NOT NULL")]
		public decimal UNIT_PRICE
		{
			get
			{
				return this._UNIT_PRICE;
			}
			set
			{
				if ((this._UNIT_PRICE != value))
				{
					this.OnUNIT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._UNIT_PRICE = value;
					this.SendPropertyChanged("UNIT_PRICE");
					this.OnUNIT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH", DbType="Money NOT NULL")]
		public decimal CASH
		{
			get
			{
				return this._CASH;
			}
			set
			{
				if ((this._CASH != value))
				{
					this.OnCASHChanging(value);
					this.SendPropertyChanging();
					this._CASH = value;
					this.SendPropertyChanged("CASH");
					this.OnCASHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHANGE", DbType="Money NOT NULL")]
		public decimal CHANGE
		{
			get
			{
				return this._CHANGE;
			}
			set
			{
				if ((this._CHANGE != value))
				{
					this.OnCHANGEChanging(value);
					this.SendPropertyChanging();
					this._CHANGE = value;
					this.SendPropertyChanged("CHANGE");
					this.OnCHANGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_STATE", DbType="Bit NOT NULL")]
		public bool RECEIPT_STATE
		{
			get
			{
				return this._RECEIPT_STATE;
			}
			set
			{
				if ((this._RECEIPT_STATE != value))
				{
					this.OnRECEIPT_STATEChanging(value);
					this.SendPropertyChanging();
					this._RECEIPT_STATE = value;
					this.SendPropertyChanged("RECEIPT_STATE");
					this.OnRECEIPT_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RECEIPT_CREATEBY
		{
			get
			{
				return this._RECEIPT_CREATEBY;
			}
			set
			{
				if ((this._RECEIPT_CREATEBY != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRECEIPT_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._RECEIPT_CREATEBY = value;
					this.SendPropertyChanged("RECEIPT_CREATEBY");
					this.OnRECEIPT_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_UPDATEDBY", DbType="VarChar(50)")]
		public string RECEIPT_UPDATEDBY
		{
			get
			{
				return this._RECEIPT_UPDATEDBY;
			}
			set
			{
				if ((this._RECEIPT_UPDATEDBY != value))
				{
					this.OnRECEIPT_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._RECEIPT_UPDATEDBY = value;
					this.SendPropertyChanged("RECEIPT_UPDATEDBY");
					this.OnRECEIPT_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime RECEIPT_CREATEDATE
		{
			get
			{
				return this._RECEIPT_CREATEDATE;
			}
			set
			{
				if ((this._RECEIPT_CREATEDATE != value))
				{
					this.OnRECEIPT_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._RECEIPT_CREATEDATE = value;
					this.SendPropertyChanged("RECEIPT_CREATEDATE");
					this.OnRECEIPT_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RECEIPT_UPDATEDATE
		{
			get
			{
				return this._RECEIPT_UPDATEDATE;
			}
			set
			{
				if ((this._RECEIPT_UPDATEDATE != value))
				{
					this.OnRECEIPT_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._RECEIPT_UPDATEDATE = value;
					this.SendPropertyChanged("RECEIPT_UPDATEDATE");
					this.OnRECEIPT_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_RECEIPT", Storage="_TBL_PRODUCT", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT", IsForeignKey=true)]
		public TBL_PRODUCT TBL_PRODUCT
		{
			get
			{
				return this._TBL_PRODUCT.Entity;
			}
			set
			{
				TBL_PRODUCT previousValue = this._TBL_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_PRODUCT.Entity = null;
						previousValue.TBL_RECEIPTs.Remove(this);
					}
					this._TBL_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBL_RECEIPTs.Add(this);
						this._ID_PRODUCT = value.ID_PRODUCT;
					}
					else
					{
						this._ID_PRODUCT = default(int);
					}
					this.SendPropertyChanged("TBL_PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_RECEIPT", Storage="_TBL_USER", ThisKey="RECEIPT_CREATEBY", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_RECEIPTs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_RECEIPTs.Add(this);
						this._RECEIPT_CREATEBY = value.ID_USER;
					}
					else
					{
						this._RECEIPT_CREATEBY = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_ROLE")]
	public partial class TBL_ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ROLE;
		
		private string _NAME_ROLE;
		
		private string _DESCRIP_ROLE;
		
		private bool _ROLE_STATE;
		
		private string _ROLE_CREATEBY;
		
		private string _ROLE_UPDATEDBY;
		
		private System.DateTime _ROLE_CREATEDATE;
		
		private System.Nullable<System.DateTime> _ROLE_UPDATEDATE;
		
		private EntitySet<TBL_USER> _TBL_USERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ROLEChanging(int value);
    partial void OnID_ROLEChanged();
    partial void OnNAME_ROLEChanging(string value);
    partial void OnNAME_ROLEChanged();
    partial void OnDESCRIP_ROLEChanging(string value);
    partial void OnDESCRIP_ROLEChanged();
    partial void OnROLE_STATEChanging(bool value);
    partial void OnROLE_STATEChanged();
    partial void OnROLE_CREATEBYChanging(string value);
    partial void OnROLE_CREATEBYChanged();
    partial void OnROLE_UPDATEDBYChanging(string value);
    partial void OnROLE_UPDATEDBYChanged();
    partial void OnROLE_CREATEDATEChanging(System.DateTime value);
    partial void OnROLE_CREATEDATEChanged();
    partial void OnROLE_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnROLE_UPDATEDATEChanged();
    #endregion
		
		public TBL_ROLE()
		{
			this._TBL_USERs = new EntitySet<TBL_USER>(new Action<TBL_USER>(this.attach_TBL_USERs), new Action<TBL_USER>(this.detach_TBL_USERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROLE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ROLE
		{
			get
			{
				return this._ID_ROLE;
			}
			set
			{
				if ((this._ID_ROLE != value))
				{
					this.OnID_ROLEChanging(value);
					this.SendPropertyChanging();
					this._ID_ROLE = value;
					this.SendPropertyChanged("ID_ROLE");
					this.OnID_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_ROLE", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NAME_ROLE
		{
			get
			{
				return this._NAME_ROLE;
			}
			set
			{
				if ((this._NAME_ROLE != value))
				{
					this.OnNAME_ROLEChanging(value);
					this.SendPropertyChanging();
					this._NAME_ROLE = value;
					this.SendPropertyChanged("NAME_ROLE");
					this.OnNAME_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_ROLE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_ROLE
		{
			get
			{
				return this._DESCRIP_ROLE;
			}
			set
			{
				if ((this._DESCRIP_ROLE != value))
				{
					this.OnDESCRIP_ROLEChanging(value);
					this.SendPropertyChanging();
					this._DESCRIP_ROLE = value;
					this.SendPropertyChanged("DESCRIP_ROLE");
					this.OnDESCRIP_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_STATE", DbType="Bit NOT NULL")]
		public bool ROLE_STATE
		{
			get
			{
				return this._ROLE_STATE;
			}
			set
			{
				if ((this._ROLE_STATE != value))
				{
					this.OnROLE_STATEChanging(value);
					this.SendPropertyChanging();
					this._ROLE_STATE = value;
					this.SendPropertyChanged("ROLE_STATE");
					this.OnROLE_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLE_CREATEBY
		{
			get
			{
				return this._ROLE_CREATEBY;
			}
			set
			{
				if ((this._ROLE_CREATEBY != value))
				{
					this.OnROLE_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CREATEBY = value;
					this.SendPropertyChanged("ROLE_CREATEBY");
					this.OnROLE_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_UPDATEDBY", DbType="VarChar(50)")]
		public string ROLE_UPDATEDBY
		{
			get
			{
				return this._ROLE_UPDATEDBY;
			}
			set
			{
				if ((this._ROLE_UPDATEDBY != value))
				{
					this.OnROLE_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._ROLE_UPDATEDBY = value;
					this.SendPropertyChanged("ROLE_UPDATEDBY");
					this.OnROLE_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ROLE_CREATEDATE
		{
			get
			{
				return this._ROLE_CREATEDATE;
			}
			set
			{
				if ((this._ROLE_CREATEDATE != value))
				{
					this.OnROLE_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._ROLE_CREATEDATE = value;
					this.SendPropertyChanged("ROLE_CREATEDATE");
					this.OnROLE_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ROLE_UPDATEDATE
		{
			get
			{
				return this._ROLE_UPDATEDATE;
			}
			set
			{
				if ((this._ROLE_UPDATEDATE != value))
				{
					this.OnROLE_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._ROLE_UPDATEDATE = value;
					this.SendPropertyChanged("ROLE_UPDATEDATE");
					this.OnROLE_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_ROLE_TBL_USER", Storage="_TBL_USERs", ThisKey="ID_ROLE", OtherKey="ID_ROLE")]
		public EntitySet<TBL_USER> TBL_USERs
		{
			get
			{
				return this._TBL_USERs;
			}
			set
			{
				this._TBL_USERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_ROLE = this;
		}
		
		private void detach_TBL_USERs(TBL_USER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_ROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_ROLE_PERMISSION")]
	public partial class TBL_ROLE_PERMISSION
	{
		
		private int _ID_ROLE;
		
		private int _ID_PER;
		
		private bool _ROLE_PER_STATE;
		
		private string _ROLE_PER_CREATEBY;
		
		private string _ROLE_PER_UPDATEDBY;
		
		private System.DateTime _ROLE_PER_CREATEDATE;
		
		private System.DateTime _ROLE_PER_UPDATEDATE;
		
		public TBL_ROLE_PERMISSION()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROLE", DbType="Int NOT NULL")]
		public int ID_ROLE
		{
			get
			{
				return this._ID_ROLE;
			}
			set
			{
				if ((this._ID_ROLE != value))
				{
					this._ID_ROLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PER", DbType="Int NOT NULL")]
		public int ID_PER
		{
			get
			{
				return this._ID_PER;
			}
			set
			{
				if ((this._ID_PER != value))
				{
					this._ID_PER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_STATE", DbType="Bit NOT NULL")]
		public bool ROLE_PER_STATE
		{
			get
			{
				return this._ROLE_PER_STATE;
			}
			set
			{
				if ((this._ROLE_PER_STATE != value))
				{
					this._ROLE_PER_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLE_PER_CREATEBY
		{
			get
			{
				return this._ROLE_PER_CREATEBY;
			}
			set
			{
				if ((this._ROLE_PER_CREATEBY != value))
				{
					this._ROLE_PER_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLE_PER_UPDATEDBY
		{
			get
			{
				return this._ROLE_PER_UPDATEDBY;
			}
			set
			{
				if ((this._ROLE_PER_UPDATEDBY != value))
				{
					this._ROLE_PER_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ROLE_PER_CREATEDATE
		{
			get
			{
				return this._ROLE_PER_CREATEDATE;
			}
			set
			{
				if ((this._ROLE_PER_CREATEDATE != value))
				{
					this._ROLE_PER_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ROLE_PER_UPDATEDATE
		{
			get
			{
				return this._ROLE_PER_UPDATEDATE;
			}
			set
			{
				if ((this._ROLE_PER_UPDATEDATE != value))
				{
					this._ROLE_PER_UPDATEDATE = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_SESSION")]
	public partial class TBL_SESSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SESION;
		
		private string _ID_USER;
		
		private System.DateTime _DATE_SESSION;
		
		private string _EDIT_SESSION;
		
		private bool _SESSION_STATE;
		
		private string _SESSION_CREATEBY;
		
		private string _SESSION_UPDATEDBY;
		
		private System.DateTime _SESSION_CREATEDATE;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SESIONChanging(int value);
    partial void OnID_SESIONChanged();
    partial void OnID_USERChanging(string value);
    partial void OnID_USERChanged();
    partial void OnDATE_SESSIONChanging(System.DateTime value);
    partial void OnDATE_SESSIONChanged();
    partial void OnEDIT_SESSIONChanging(string value);
    partial void OnEDIT_SESSIONChanged();
    partial void OnSESSION_STATEChanging(bool value);
    partial void OnSESSION_STATEChanged();
    partial void OnSESSION_CREATEBYChanging(string value);
    partial void OnSESSION_CREATEBYChanged();
    partial void OnSESSION_UPDATEDBYChanging(string value);
    partial void OnSESSION_UPDATEDBYChanged();
    partial void OnSESSION_CREATEDATEChanging(System.DateTime value);
    partial void OnSESSION_CREATEDATEChanged();
    #endregion
		
		public TBL_SESSION()
		{
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SESION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SESION
		{
			get
			{
				return this._ID_SESION;
			}
			set
			{
				if ((this._ID_SESION != value))
				{
					this.OnID_SESIONChanging(value);
					this.SendPropertyChanging();
					this._ID_SESION = value;
					this.SendPropertyChanged("ID_SESION");
					this.OnID_SESIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_SESSION", DbType="DateTime NOT NULL")]
		public System.DateTime DATE_SESSION
		{
			get
			{
				return this._DATE_SESSION;
			}
			set
			{
				if ((this._DATE_SESSION != value))
				{
					this.OnDATE_SESSIONChanging(value);
					this.SendPropertyChanging();
					this._DATE_SESSION = value;
					this.SendPropertyChanged("DATE_SESSION");
					this.OnDATE_SESSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIT_SESSION", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string EDIT_SESSION
		{
			get
			{
				return this._EDIT_SESSION;
			}
			set
			{
				if ((this._EDIT_SESSION != value))
				{
					this.OnEDIT_SESSIONChanging(value);
					this.SendPropertyChanging();
					this._EDIT_SESSION = value;
					this.SendPropertyChanged("EDIT_SESSION");
					this.OnEDIT_SESSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SESSION_STATE", DbType="Bit NOT NULL")]
		public bool SESSION_STATE
		{
			get
			{
				return this._SESSION_STATE;
			}
			set
			{
				if ((this._SESSION_STATE != value))
				{
					this.OnSESSION_STATEChanging(value);
					this.SendPropertyChanging();
					this._SESSION_STATE = value;
					this.SendPropertyChanged("SESSION_STATE");
					this.OnSESSION_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SESSION_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SESSION_CREATEBY
		{
			get
			{
				return this._SESSION_CREATEBY;
			}
			set
			{
				if ((this._SESSION_CREATEBY != value))
				{
					this.OnSESSION_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._SESSION_CREATEBY = value;
					this.SendPropertyChanged("SESSION_CREATEBY");
					this.OnSESSION_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SESSION_UPDATEDBY", DbType="VarChar(50)")]
		public string SESSION_UPDATEDBY
		{
			get
			{
				return this._SESSION_UPDATEDBY;
			}
			set
			{
				if ((this._SESSION_UPDATEDBY != value))
				{
					this.OnSESSION_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._SESSION_UPDATEDBY = value;
					this.SendPropertyChanged("SESSION_UPDATEDBY");
					this.OnSESSION_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SESSION_CREATEDATE", DbType="Date NOT NULL")]
		public System.DateTime SESSION_CREATEDATE
		{
			get
			{
				return this._SESSION_CREATEDATE;
			}
			set
			{
				if ((this._SESSION_CREATEDATE != value))
				{
					this.OnSESSION_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._SESSION_CREATEDATE = value;
					this.SendPropertyChanged("SESSION_CREATEDATE");
					this.OnSESSION_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_SESSION", Storage="_TBL_USER", ThisKey="ID_USER", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_SESSIONs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_SESSIONs.Add(this);
						this._ID_USER = value.ID_USER;
					}
					else
					{
						this._ID_USER = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_STOCK")]
	public partial class TBL_STOCK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_STOCK;
		
		private int _ID_PRODUCT;
		
		private int _STOCK_INITIAL_QUANTITY;
		
		private int _STOCK_QUANTITY;
		
		private int _STOCK_ADJUSTMENT;
		
		private System.DateTime _STOCK_DATE_PRODUCT;
		
		private bool _STOCK_STATE;
		
		private string _STOCK_CREATEBY;
		
		private string _STOCK_UPDATEDBY;
		
		private System.DateTime _STOCK_CREATEDATE;
		
		private System.Nullable<System.DateTime> _STOCK_UPDATEDATE;
		
		private EntityRef<TBL_PRODUCT> _TBL_PRODUCT;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_STOCKChanging(int value);
    partial void OnID_STOCKChanged();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnSTOCK_INITIAL_QUANTITYChanging(int value);
    partial void OnSTOCK_INITIAL_QUANTITYChanged();
    partial void OnSTOCK_QUANTITYChanging(int value);
    partial void OnSTOCK_QUANTITYChanged();
    partial void OnSTOCK_ADJUSTMENTChanging(int value);
    partial void OnSTOCK_ADJUSTMENTChanged();
    partial void OnSTOCK_DATE_PRODUCTChanging(System.DateTime value);
    partial void OnSTOCK_DATE_PRODUCTChanged();
    partial void OnSTOCK_STATEChanging(bool value);
    partial void OnSTOCK_STATEChanged();
    partial void OnSTOCK_CREATEBYChanging(string value);
    partial void OnSTOCK_CREATEBYChanged();
    partial void OnSTOCK_UPDATEDBYChanging(string value);
    partial void OnSTOCK_UPDATEDBYChanged();
    partial void OnSTOCK_CREATEDATEChanging(System.DateTime value);
    partial void OnSTOCK_CREATEDATEChanged();
    partial void OnSTOCK_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnSTOCK_UPDATEDATEChanged();
    #endregion
		
		public TBL_STOCK()
		{
			this._TBL_PRODUCT = default(EntityRef<TBL_PRODUCT>);
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_STOCK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_STOCK
		{
			get
			{
				return this._ID_STOCK;
			}
			set
			{
				if ((this._ID_STOCK != value))
				{
					this.OnID_STOCKChanging(value);
					this.SendPropertyChanging();
					this._ID_STOCK = value;
					this.SendPropertyChanged("ID_STOCK");
					this.OnID_STOCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Int NOT NULL")]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					if (this._TBL_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_INITIAL_QUANTITY", DbType="Int NOT NULL")]
		public int STOCK_INITIAL_QUANTITY
		{
			get
			{
				return this._STOCK_INITIAL_QUANTITY;
			}
			set
			{
				if ((this._STOCK_INITIAL_QUANTITY != value))
				{
					this.OnSTOCK_INITIAL_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._STOCK_INITIAL_QUANTITY = value;
					this.SendPropertyChanged("STOCK_INITIAL_QUANTITY");
					this.OnSTOCK_INITIAL_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_QUANTITY", DbType="Int NOT NULL")]
		public int STOCK_QUANTITY
		{
			get
			{
				return this._STOCK_QUANTITY;
			}
			set
			{
				if ((this._STOCK_QUANTITY != value))
				{
					this.OnSTOCK_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._STOCK_QUANTITY = value;
					this.SendPropertyChanged("STOCK_QUANTITY");
					this.OnSTOCK_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_ADJUSTMENT", DbType="Int NOT NULL")]
		public int STOCK_ADJUSTMENT
		{
			get
			{
				return this._STOCK_ADJUSTMENT;
			}
			set
			{
				if ((this._STOCK_ADJUSTMENT != value))
				{
					this.OnSTOCK_ADJUSTMENTChanging(value);
					this.SendPropertyChanging();
					this._STOCK_ADJUSTMENT = value;
					this.SendPropertyChanged("STOCK_ADJUSTMENT");
					this.OnSTOCK_ADJUSTMENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_DATE_PRODUCT", DbType="DateTime NOT NULL")]
		public System.DateTime STOCK_DATE_PRODUCT
		{
			get
			{
				return this._STOCK_DATE_PRODUCT;
			}
			set
			{
				if ((this._STOCK_DATE_PRODUCT != value))
				{
					this.OnSTOCK_DATE_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._STOCK_DATE_PRODUCT = value;
					this.SendPropertyChanged("STOCK_DATE_PRODUCT");
					this.OnSTOCK_DATE_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_STATE", DbType="Bit NOT NULL")]
		public bool STOCK_STATE
		{
			get
			{
				return this._STOCK_STATE;
			}
			set
			{
				if ((this._STOCK_STATE != value))
				{
					this.OnSTOCK_STATEChanging(value);
					this.SendPropertyChanging();
					this._STOCK_STATE = value;
					this.SendPropertyChanged("STOCK_STATE");
					this.OnSTOCK_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string STOCK_CREATEBY
		{
			get
			{
				return this._STOCK_CREATEBY;
			}
			set
			{
				if ((this._STOCK_CREATEBY != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTOCK_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._STOCK_CREATEBY = value;
					this.SendPropertyChanged("STOCK_CREATEBY");
					this.OnSTOCK_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string STOCK_UPDATEDBY
		{
			get
			{
				return this._STOCK_UPDATEDBY;
			}
			set
			{
				if ((this._STOCK_UPDATEDBY != value))
				{
					this.OnSTOCK_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._STOCK_UPDATEDBY = value;
					this.SendPropertyChanged("STOCK_UPDATEDBY");
					this.OnSTOCK_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STOCK_CREATEDATE
		{
			get
			{
				return this._STOCK_CREATEDATE;
			}
			set
			{
				if ((this._STOCK_CREATEDATE != value))
				{
					this.OnSTOCK_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._STOCK_CREATEDATE = value;
					this.SendPropertyChanged("STOCK_CREATEDATE");
					this.OnSTOCK_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STOCK_UPDATEDATE
		{
			get
			{
				return this._STOCK_UPDATEDATE;
			}
			set
			{
				if ((this._STOCK_UPDATEDATE != value))
				{
					this.OnSTOCK_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._STOCK_UPDATEDATE = value;
					this.SendPropertyChanged("STOCK_UPDATEDATE");
					this.OnSTOCK_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_STOCK", Storage="_TBL_PRODUCT", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT", IsForeignKey=true)]
		public TBL_PRODUCT TBL_PRODUCT
		{
			get
			{
				return this._TBL_PRODUCT.Entity;
			}
			set
			{
				TBL_PRODUCT previousValue = this._TBL_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_PRODUCT.Entity = null;
						previousValue.TBL_STOCKs.Remove(this);
					}
					this._TBL_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBL_STOCKs.Add(this);
						this._ID_PRODUCT = value.ID_PRODUCT;
					}
					else
					{
						this._ID_PRODUCT = default(int);
					}
					this.SendPropertyChanged("TBL_PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_STOCK", Storage="_TBL_USER", ThisKey="STOCK_CREATEBY", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_STOCKs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_STOCKs.Add(this);
						this._STOCK_CREATEBY = value.ID_USER;
					}
					else
					{
						this._STOCK_CREATEBY = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_USER")]
	public partial class TBL_USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_USER;
		
		private string _USER_NAME;
		
		private string _USER_EMAIL;
		
		private int _ID_DPT;
		
		private int _ID_AREA;
		
		private int _ID_POSITION;
		
		private int _ID_ROLE;
		
		private string _USER_NICKNAME;
		
		private string _USER_PASSWORD;
		
		private bool _USER_STATE;
		
		private string _USER_CREATEBY;
		
		private string _USER_UPDATEDBY;
		
		private System.DateTime _USER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _USER_UPDATEDATE;
		
		private EntitySet<TBL_CUSTOMER> _TBL_CUSTOMERs;
		
		private EntitySet<TBL_PREPAID> _TBL_PREPAIDs;
		
		private EntitySet<TBL_PRODUCT> _TBL_PRODUCTs;
		
		private EntitySet<TBL_RECEIPT> _TBL_RECEIPTs;
		
		private EntitySet<TBL_SESSION> _TBL_SESSIONs;
		
		private EntitySet<TBL_STOCK> _TBL_STOCKs;
		
		private EntitySet<TBL_CXC> _TBL_CXCs;
		
		private EntitySet<TBL_ORDER> _TBL_ORDERs;
		
		private EntityRef<TBL_AREA> _TBL_AREA;
		
		private EntityRef<TBL_DPT> _TBL_DPT;
		
		private EntityRef<TBL_POSITION> _TBL_POSITION;
		
		private EntityRef<TBL_ROLE> _TBL_ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USERChanging(string value);
    partial void OnID_USERChanged();
    partial void OnUSER_NAMEChanging(string value);
    partial void OnUSER_NAMEChanged();
    partial void OnUSER_EMAILChanging(string value);
    partial void OnUSER_EMAILChanged();
    partial void OnID_DPTChanging(int value);
    partial void OnID_DPTChanged();
    partial void OnID_AREAChanging(int value);
    partial void OnID_AREAChanged();
    partial void OnID_POSITIONChanging(int value);
    partial void OnID_POSITIONChanged();
    partial void OnID_ROLEChanging(int value);
    partial void OnID_ROLEChanged();
    partial void OnUSER_NICKNAMEChanging(string value);
    partial void OnUSER_NICKNAMEChanged();
    partial void OnUSER_PASSWORDChanging(string value);
    partial void OnUSER_PASSWORDChanged();
    partial void OnUSER_STATEChanging(bool value);
    partial void OnUSER_STATEChanged();
    partial void OnUSER_CREATEBYChanging(string value);
    partial void OnUSER_CREATEBYChanged();
    partial void OnUSER_UPDATEDBYChanging(string value);
    partial void OnUSER_UPDATEDBYChanged();
    partial void OnUSER_CREATEDATEChanging(System.DateTime value);
    partial void OnUSER_CREATEDATEChanged();
    partial void OnUSER_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUSER_UPDATEDATEChanged();
    #endregion
		
		public TBL_USER()
		{
			this._TBL_CUSTOMERs = new EntitySet<TBL_CUSTOMER>(new Action<TBL_CUSTOMER>(this.attach_TBL_CUSTOMERs), new Action<TBL_CUSTOMER>(this.detach_TBL_CUSTOMERs));
			this._TBL_PREPAIDs = new EntitySet<TBL_PREPAID>(new Action<TBL_PREPAID>(this.attach_TBL_PREPAIDs), new Action<TBL_PREPAID>(this.detach_TBL_PREPAIDs));
			this._TBL_PRODUCTs = new EntitySet<TBL_PRODUCT>(new Action<TBL_PRODUCT>(this.attach_TBL_PRODUCTs), new Action<TBL_PRODUCT>(this.detach_TBL_PRODUCTs));
			this._TBL_RECEIPTs = new EntitySet<TBL_RECEIPT>(new Action<TBL_RECEIPT>(this.attach_TBL_RECEIPTs), new Action<TBL_RECEIPT>(this.detach_TBL_RECEIPTs));
			this._TBL_SESSIONs = new EntitySet<TBL_SESSION>(new Action<TBL_SESSION>(this.attach_TBL_SESSIONs), new Action<TBL_SESSION>(this.detach_TBL_SESSIONs));
			this._TBL_STOCKs = new EntitySet<TBL_STOCK>(new Action<TBL_STOCK>(this.attach_TBL_STOCKs), new Action<TBL_STOCK>(this.detach_TBL_STOCKs));
			this._TBL_CXCs = new EntitySet<TBL_CXC>(new Action<TBL_CXC>(this.attach_TBL_CXCs), new Action<TBL_CXC>(this.detach_TBL_CXCs));
			this._TBL_ORDERs = new EntitySet<TBL_ORDER>(new Action<TBL_ORDER>(this.attach_TBL_ORDERs), new Action<TBL_ORDER>(this.detach_TBL_ORDERs));
			this._TBL_AREA = default(EntityRef<TBL_AREA>);
			this._TBL_DPT = default(EntityRef<TBL_DPT>);
			this._TBL_POSITION = default(EntityRef<TBL_POSITION>);
			this._TBL_ROLE = default(EntityRef<TBL_ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NAME", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string USER_NAME
		{
			get
			{
				return this._USER_NAME;
			}
			set
			{
				if ((this._USER_NAME != value))
				{
					this.OnUSER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._USER_NAME = value;
					this.SendPropertyChanged("USER_NAME");
					this.OnUSER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_EMAIL", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string USER_EMAIL
		{
			get
			{
				return this._USER_EMAIL;
			}
			set
			{
				if ((this._USER_EMAIL != value))
				{
					this.OnUSER_EMAILChanging(value);
					this.SendPropertyChanging();
					this._USER_EMAIL = value;
					this.SendPropertyChanged("USER_EMAIL");
					this.OnUSER_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DPT", DbType="Int NOT NULL")]
		public int ID_DPT
		{
			get
			{
				return this._ID_DPT;
			}
			set
			{
				if ((this._ID_DPT != value))
				{
					if (this._TBL_DPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DPTChanging(value);
					this.SendPropertyChanging();
					this._ID_DPT = value;
					this.SendPropertyChanged("ID_DPT");
					this.OnID_DPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AREA", DbType="Int NOT NULL")]
		public int ID_AREA
		{
			get
			{
				return this._ID_AREA;
			}
			set
			{
				if ((this._ID_AREA != value))
				{
					if (this._TBL_AREA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_AREAChanging(value);
					this.SendPropertyChanging();
					this._ID_AREA = value;
					this.SendPropertyChanged("ID_AREA");
					this.OnID_AREAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_POSITION", DbType="Int NOT NULL")]
		public int ID_POSITION
		{
			get
			{
				return this._ID_POSITION;
			}
			set
			{
				if ((this._ID_POSITION != value))
				{
					if (this._TBL_POSITION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_POSITIONChanging(value);
					this.SendPropertyChanging();
					this._ID_POSITION = value;
					this.SendPropertyChanged("ID_POSITION");
					this.OnID_POSITIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROLE", DbType="Int NOT NULL")]
		public int ID_ROLE
		{
			get
			{
				return this._ID_ROLE;
			}
			set
			{
				if ((this._ID_ROLE != value))
				{
					if (this._TBL_ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ROLEChanging(value);
					this.SendPropertyChanging();
					this._ID_ROLE = value;
					this.SendPropertyChanged("ID_ROLE");
					this.OnID_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NICKNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_NICKNAME
		{
			get
			{
				return this._USER_NICKNAME;
			}
			set
			{
				if ((this._USER_NICKNAME != value))
				{
					this.OnUSER_NICKNAMEChanging(value);
					this.SendPropertyChanging();
					this._USER_NICKNAME = value;
					this.SendPropertyChanged("USER_NICKNAME");
					this.OnUSER_NICKNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PASSWORD", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string USER_PASSWORD
		{
			get
			{
				return this._USER_PASSWORD;
			}
			set
			{
				if ((this._USER_PASSWORD != value))
				{
					this.OnUSER_PASSWORDChanging(value);
					this.SendPropertyChanging();
					this._USER_PASSWORD = value;
					this.SendPropertyChanged("USER_PASSWORD");
					this.OnUSER_PASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_STATE", DbType="Bit NOT NULL")]
		public bool USER_STATE
		{
			get
			{
				return this._USER_STATE;
			}
			set
			{
				if ((this._USER_STATE != value))
				{
					this.OnUSER_STATEChanging(value);
					this.SendPropertyChanging();
					this._USER_STATE = value;
					this.SendPropertyChanged("USER_STATE");
					this.OnUSER_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_CREATEBY
		{
			get
			{
				return this._USER_CREATEBY;
			}
			set
			{
				if ((this._USER_CREATEBY != value))
				{
					this.OnUSER_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._USER_CREATEBY = value;
					this.SendPropertyChanged("USER_CREATEBY");
					this.OnUSER_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_UPDATEDBY", DbType="VarChar(50)")]
		public string USER_UPDATEDBY
		{
			get
			{
				return this._USER_UPDATEDBY;
			}
			set
			{
				if ((this._USER_UPDATEDBY != value))
				{
					this.OnUSER_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._USER_UPDATEDBY = value;
					this.SendPropertyChanged("USER_UPDATEDBY");
					this.OnUSER_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime USER_CREATEDATE
		{
			get
			{
				return this._USER_CREATEDATE;
			}
			set
			{
				if ((this._USER_CREATEDATE != value))
				{
					this.OnUSER_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._USER_CREATEDATE = value;
					this.SendPropertyChanged("USER_CREATEDATE");
					this.OnUSER_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> USER_UPDATEDATE
		{
			get
			{
				return this._USER_UPDATEDATE;
			}
			set
			{
				if ((this._USER_UPDATEDATE != value))
				{
					this.OnUSER_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._USER_UPDATEDATE = value;
					this.SendPropertyChanged("USER_UPDATEDATE");
					this.OnUSER_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_CUSTOMER", Storage="_TBL_CUSTOMERs", ThisKey="ID_USER", OtherKey="CUSTOMER_CREATEBY")]
		public EntitySet<TBL_CUSTOMER> TBL_CUSTOMERs
		{
			get
			{
				return this._TBL_CUSTOMERs;
			}
			set
			{
				this._TBL_CUSTOMERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_PREPAID", Storage="_TBL_PREPAIDs", ThisKey="ID_USER", OtherKey="PREPAID_CREATEBY")]
		public EntitySet<TBL_PREPAID> TBL_PREPAIDs
		{
			get
			{
				return this._TBL_PREPAIDs;
			}
			set
			{
				this._TBL_PREPAIDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_PRODUCT", Storage="_TBL_PRODUCTs", ThisKey="ID_USER", OtherKey="PRODUCT_CREATEBY")]
		public EntitySet<TBL_PRODUCT> TBL_PRODUCTs
		{
			get
			{
				return this._TBL_PRODUCTs;
			}
			set
			{
				this._TBL_PRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_RECEIPT", Storage="_TBL_RECEIPTs", ThisKey="ID_USER", OtherKey="RECEIPT_CREATEBY")]
		public EntitySet<TBL_RECEIPT> TBL_RECEIPTs
		{
			get
			{
				return this._TBL_RECEIPTs;
			}
			set
			{
				this._TBL_RECEIPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_SESSION", Storage="_TBL_SESSIONs", ThisKey="ID_USER", OtherKey="ID_USER")]
		public EntitySet<TBL_SESSION> TBL_SESSIONs
		{
			get
			{
				return this._TBL_SESSIONs;
			}
			set
			{
				this._TBL_SESSIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_STOCK", Storage="_TBL_STOCKs", ThisKey="ID_USER", OtherKey="STOCK_CREATEBY")]
		public EntitySet<TBL_STOCK> TBL_STOCKs
		{
			get
			{
				return this._TBL_STOCKs;
			}
			set
			{
				this._TBL_STOCKs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_CXC", Storage="_TBL_CXCs", ThisKey="ID_USER", OtherKey="CXC_CREATEBY")]
		public EntitySet<TBL_CXC> TBL_CXCs
		{
			get
			{
				return this._TBL_CXCs;
			}
			set
			{
				this._TBL_CXCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_ORDER", Storage="_TBL_ORDERs", ThisKey="ID_USER", OtherKey="ORDER_CREATEBY")]
		public EntitySet<TBL_ORDER> TBL_ORDERs
		{
			get
			{
				return this._TBL_ORDERs;
			}
			set
			{
				this._TBL_ORDERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_AREA_TBL_USER", Storage="_TBL_AREA", ThisKey="ID_AREA", OtherKey="ID_AREA", IsForeignKey=true)]
		public TBL_AREA TBL_AREA
		{
			get
			{
				return this._TBL_AREA.Entity;
			}
			set
			{
				TBL_AREA previousValue = this._TBL_AREA.Entity;
				if (((previousValue != value) 
							|| (this._TBL_AREA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_AREA.Entity = null;
						previousValue.TBL_USERs.Remove(this);
					}
					this._TBL_AREA.Entity = value;
					if ((value != null))
					{
						value.TBL_USERs.Add(this);
						this._ID_AREA = value.ID_AREA;
					}
					else
					{
						this._ID_AREA = default(int);
					}
					this.SendPropertyChanged("TBL_AREA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_DPT_TBL_USER", Storage="_TBL_DPT", ThisKey="ID_DPT", OtherKey="ID_DPT", IsForeignKey=true)]
		public TBL_DPT TBL_DPT
		{
			get
			{
				return this._TBL_DPT.Entity;
			}
			set
			{
				TBL_DPT previousValue = this._TBL_DPT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_DPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_DPT.Entity = null;
						previousValue.TBL_USERs.Remove(this);
					}
					this._TBL_DPT.Entity = value;
					if ((value != null))
					{
						value.TBL_USERs.Add(this);
						this._ID_DPT = value.ID_DPT;
					}
					else
					{
						this._ID_DPT = default(int);
					}
					this.SendPropertyChanged("TBL_DPT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_POSITION_TBL_USER", Storage="_TBL_POSITION", ThisKey="ID_POSITION", OtherKey="ID_POSITION", IsForeignKey=true)]
		public TBL_POSITION TBL_POSITION
		{
			get
			{
				return this._TBL_POSITION.Entity;
			}
			set
			{
				TBL_POSITION previousValue = this._TBL_POSITION.Entity;
				if (((previousValue != value) 
							|| (this._TBL_POSITION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_POSITION.Entity = null;
						previousValue.TBL_USERs.Remove(this);
					}
					this._TBL_POSITION.Entity = value;
					if ((value != null))
					{
						value.TBL_USERs.Add(this);
						this._ID_POSITION = value.ID_POSITION;
					}
					else
					{
						this._ID_POSITION = default(int);
					}
					this.SendPropertyChanged("TBL_POSITION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_ROLE_TBL_USER", Storage="_TBL_ROLE", ThisKey="ID_ROLE", OtherKey="ID_ROLE", IsForeignKey=true)]
		public TBL_ROLE TBL_ROLE
		{
			get
			{
				return this._TBL_ROLE.Entity;
			}
			set
			{
				TBL_ROLE previousValue = this._TBL_ROLE.Entity;
				if (((previousValue != value) 
							|| (this._TBL_ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_ROLE.Entity = null;
						previousValue.TBL_USERs.Remove(this);
					}
					this._TBL_ROLE.Entity = value;
					if ((value != null))
					{
						value.TBL_USERs.Add(this);
						this._ID_ROLE = value.ID_ROLE;
					}
					else
					{
						this._ID_ROLE = default(int);
					}
					this.SendPropertyChanged("TBL_ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBL_CUSTOMERs(TBL_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_CUSTOMERs(TBL_CUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
		
		private void attach_TBL_PREPAIDs(TBL_PREPAID entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_PREPAIDs(TBL_PREPAID entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
		
		private void attach_TBL_PRODUCTs(TBL_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_PRODUCTs(TBL_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
		
		private void attach_TBL_RECEIPTs(TBL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_RECEIPTs(TBL_RECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
		
		private void attach_TBL_SESSIONs(TBL_SESSION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_SESSIONs(TBL_SESSION entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
		
		private void attach_TBL_STOCKs(TBL_STOCK entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_STOCKs(TBL_STOCK entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
		
		private void attach_TBL_CXCs(TBL_CXC entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_CXCs(TBL_CXC entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
		
		private void attach_TBL_ORDERs(TBL_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = this;
		}
		
		private void detach_TBL_ORDERs(TBL_ORDER entity)
		{
			this.SendPropertyChanging();
			entity.TBL_USER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_CXC")]
	public partial class TBL_CXC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CXC;
		
		private string _ID_CUSTOMER;
		
		private int _ID_PRODUCT;
		
		private int _QUANTITY_RETREAT;
		
		private int _QUANTITY_RETURN;
		
		private decimal _TOTAL_CXC;
		
		private int _BALANCE_CXC;
		
		private bool _CXC_STATE;
		
		private string _CXC_CREATEBY;
		
		private string _CXC_UPDATEDBY;
		
		private System.DateTime _CXC_CREATEDATE;
		
		private System.DateTime _CXC_UPDATEDATE;
		
		private EntityRef<TBL_CUSTOMER> _TBL_CUSTOMER;
		
		private EntityRef<TBL_PRODUCT> _TBL_PRODUCT;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CXCChanging(int value);
    partial void OnID_CXCChanged();
    partial void OnID_CUSTOMERChanging(string value);
    partial void OnID_CUSTOMERChanged();
    partial void OnID_PRODUCTChanging(int value);
    partial void OnID_PRODUCTChanged();
    partial void OnQUANTITY_RETREATChanging(int value);
    partial void OnQUANTITY_RETREATChanged();
    partial void OnQUANTITY_RETURNChanging(int value);
    partial void OnQUANTITY_RETURNChanged();
    partial void OnTOTAL_CXCChanging(decimal value);
    partial void OnTOTAL_CXCChanged();
    partial void OnBALANCE_CXCChanging(int value);
    partial void OnBALANCE_CXCChanged();
    partial void OnCXC_STATEChanging(bool value);
    partial void OnCXC_STATEChanged();
    partial void OnCXC_CREATEBYChanging(string value);
    partial void OnCXC_CREATEBYChanged();
    partial void OnCXC_UPDATEDBYChanging(string value);
    partial void OnCXC_UPDATEDBYChanged();
    partial void OnCXC_CREATEDATEChanging(System.DateTime value);
    partial void OnCXC_CREATEDATEChanged();
    partial void OnCXC_UPDATEDATEChanging(System.DateTime value);
    partial void OnCXC_UPDATEDATEChanged();
    #endregion
		
		public TBL_CXC()
		{
			this._TBL_CUSTOMER = default(EntityRef<TBL_CUSTOMER>);
			this._TBL_PRODUCT = default(EntityRef<TBL_PRODUCT>);
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CXC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_CXC
		{
			get
			{
				return this._ID_CXC;
			}
			set
			{
				if ((this._ID_CXC != value))
				{
					this.OnID_CXCChanging(value);
					this.SendPropertyChanging();
					this._ID_CXC = value;
					this.SendPropertyChanged("ID_CXC");
					this.OnID_CXCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					if (this._TBL_CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CUSTOMERChanging(value);
					this.SendPropertyChanging();
					this._ID_CUSTOMER = value;
					this.SendPropertyChanged("ID_CUSTOMER");
					this.OnID_CUSTOMERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Int NOT NULL")]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					if (this._TBL_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._ID_PRODUCT = value;
					this.SendPropertyChanged("ID_PRODUCT");
					this.OnID_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_RETREAT", DbType="Int NOT NULL")]
		public int QUANTITY_RETREAT
		{
			get
			{
				return this._QUANTITY_RETREAT;
			}
			set
			{
				if ((this._QUANTITY_RETREAT != value))
				{
					this.OnQUANTITY_RETREATChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY_RETREAT = value;
					this.SendPropertyChanged("QUANTITY_RETREAT");
					this.OnQUANTITY_RETREATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_RETURN", DbType="Int NOT NULL")]
		public int QUANTITY_RETURN
		{
			get
			{
				return this._QUANTITY_RETURN;
			}
			set
			{
				if ((this._QUANTITY_RETURN != value))
				{
					this.OnQUANTITY_RETURNChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY_RETURN = value;
					this.SendPropertyChanged("QUANTITY_RETURN");
					this.OnQUANTITY_RETURNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_CXC", DbType="Money NOT NULL")]
		public decimal TOTAL_CXC
		{
			get
			{
				return this._TOTAL_CXC;
			}
			set
			{
				if ((this._TOTAL_CXC != value))
				{
					this.OnTOTAL_CXCChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_CXC = value;
					this.SendPropertyChanged("TOTAL_CXC");
					this.OnTOTAL_CXCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BALANCE_CXC", DbType="Int NOT NULL")]
		public int BALANCE_CXC
		{
			get
			{
				return this._BALANCE_CXC;
			}
			set
			{
				if ((this._BALANCE_CXC != value))
				{
					this.OnBALANCE_CXCChanging(value);
					this.SendPropertyChanging();
					this._BALANCE_CXC = value;
					this.SendPropertyChanged("BALANCE_CXC");
					this.OnBALANCE_CXCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_STATE", DbType="Bit NOT NULL")]
		public bool CXC_STATE
		{
			get
			{
				return this._CXC_STATE;
			}
			set
			{
				if ((this._CXC_STATE != value))
				{
					this.OnCXC_STATEChanging(value);
					this.SendPropertyChanging();
					this._CXC_STATE = value;
					this.SendPropertyChanged("CXC_STATE");
					this.OnCXC_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CXC_CREATEBY
		{
			get
			{
				return this._CXC_CREATEBY;
			}
			set
			{
				if ((this._CXC_CREATEBY != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCXC_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._CXC_CREATEBY = value;
					this.SendPropertyChanged("CXC_CREATEBY");
					this.OnCXC_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CXC_UPDATEDBY
		{
			get
			{
				return this._CXC_UPDATEDBY;
			}
			set
			{
				if ((this._CXC_UPDATEDBY != value))
				{
					this.OnCXC_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._CXC_UPDATEDBY = value;
					this.SendPropertyChanged("CXC_UPDATEDBY");
					this.OnCXC_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CXC_CREATEDATE
		{
			get
			{
				return this._CXC_CREATEDATE;
			}
			set
			{
				if ((this._CXC_CREATEDATE != value))
				{
					this.OnCXC_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._CXC_CREATEDATE = value;
					this.SendPropertyChanged("CXC_CREATEDATE");
					this.OnCXC_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CXC_UPDATEDATE
		{
			get
			{
				return this._CXC_UPDATEDATE;
			}
			set
			{
				if ((this._CXC_UPDATEDATE != value))
				{
					this.OnCXC_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._CXC_UPDATEDATE = value;
					this.SendPropertyChanged("CXC_UPDATEDATE");
					this.OnCXC_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_CUSTOMER_TBL_CXC", Storage="_TBL_CUSTOMER", ThisKey="ID_CUSTOMER", OtherKey="ID_CUSTOMER", IsForeignKey=true)]
		public TBL_CUSTOMER TBL_CUSTOMER
		{
			get
			{
				return this._TBL_CUSTOMER.Entity;
			}
			set
			{
				TBL_CUSTOMER previousValue = this._TBL_CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_CUSTOMER.Entity = null;
						previousValue.TBL_CXCs.Remove(this);
					}
					this._TBL_CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.TBL_CXCs.Add(this);
						this._ID_CUSTOMER = value.ID_CUSTOMER;
					}
					else
					{
						this._ID_CUSTOMER = default(string);
					}
					this.SendPropertyChanged("TBL_CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PRODUCT_TBL_CXC", Storage="_TBL_PRODUCT", ThisKey="ID_PRODUCT", OtherKey="ID_PRODUCT", IsForeignKey=true)]
		public TBL_PRODUCT TBL_PRODUCT
		{
			get
			{
				return this._TBL_PRODUCT.Entity;
			}
			set
			{
				TBL_PRODUCT previousValue = this._TBL_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBL_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_PRODUCT.Entity = null;
						previousValue.TBL_CXCs.Remove(this);
					}
					this._TBL_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBL_CXCs.Add(this);
						this._ID_PRODUCT = value.ID_PRODUCT;
					}
					else
					{
						this._ID_PRODUCT = default(int);
					}
					this.SendPropertyChanged("TBL_PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_CXC", Storage="_TBL_USER", ThisKey="CXC_CREATEBY", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_CXCs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_CXCs.Add(this);
						this._CXC_CREATEBY = value.ID_USER;
					}
					else
					{
						this._CXC_CREATEBY = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_ORDER")]
	public partial class TBL_ORDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ORDER;
		
		private int _ID_PREPAID;
		
		private int _ORDER_QUANTITY;
		
		private System.DateTime _ORDER_DATE;
		
		private bool _ORDER_DELIVERY;
		
		private bool _ORDER_STATE;
		
		private string _ORDER_CREATEBY;
		
		private string _ORDER_UPDATEDBY;
		
		private System.DateTime _ORDER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _ORDER_UPDATEDATE;
		
		private EntityRef<TBL_PREPAID> _TBL_PREPAID;
		
		private EntityRef<TBL_USER> _TBL_USER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ORDERChanging(int value);
    partial void OnID_ORDERChanged();
    partial void OnID_PREPAIDChanging(int value);
    partial void OnID_PREPAIDChanged();
    partial void OnORDER_QUANTITYChanging(int value);
    partial void OnORDER_QUANTITYChanged();
    partial void OnORDER_DATEChanging(System.DateTime value);
    partial void OnORDER_DATEChanged();
    partial void OnORDER_DELIVERYChanging(bool value);
    partial void OnORDER_DELIVERYChanged();
    partial void OnORDER_STATEChanging(bool value);
    partial void OnORDER_STATEChanged();
    partial void OnORDER_CREATEBYChanging(string value);
    partial void OnORDER_CREATEBYChanged();
    partial void OnORDER_UPDATEDBYChanging(string value);
    partial void OnORDER_UPDATEDBYChanged();
    partial void OnORDER_CREATEDATEChanging(System.DateTime value);
    partial void OnORDER_CREATEDATEChanged();
    partial void OnORDER_UPDATEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnORDER_UPDATEDATEChanged();
    #endregion
		
		public TBL_ORDER()
		{
			this._TBL_PREPAID = default(EntityRef<TBL_PREPAID>);
			this._TBL_USER = default(EntityRef<TBL_USER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ORDER", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_ORDER
		{
			get
			{
				return this._ID_ORDER;
			}
			set
			{
				if ((this._ID_ORDER != value))
				{
					this.OnID_ORDERChanging(value);
					this.SendPropertyChanging();
					this._ID_ORDER = value;
					this.SendPropertyChanged("ID_ORDER");
					this.OnID_ORDERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PREPAID", DbType="Int NOT NULL")]
		public int ID_PREPAID
		{
			get
			{
				return this._ID_PREPAID;
			}
			set
			{
				if ((this._ID_PREPAID != value))
				{
					if (this._TBL_PREPAID.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PREPAIDChanging(value);
					this.SendPropertyChanging();
					this._ID_PREPAID = value;
					this.SendPropertyChanged("ID_PREPAID");
					this.OnID_PREPAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_QUANTITY", DbType="Int NOT NULL")]
		public int ORDER_QUANTITY
		{
			get
			{
				return this._ORDER_QUANTITY;
			}
			set
			{
				if ((this._ORDER_QUANTITY != value))
				{
					this.OnORDER_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._ORDER_QUANTITY = value;
					this.SendPropertyChanged("ORDER_QUANTITY");
					this.OnORDER_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime ORDER_DATE
		{
			get
			{
				return this._ORDER_DATE;
			}
			set
			{
				if ((this._ORDER_DATE != value))
				{
					this.OnORDER_DATEChanging(value);
					this.SendPropertyChanging();
					this._ORDER_DATE = value;
					this.SendPropertyChanged("ORDER_DATE");
					this.OnORDER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DELIVERY", DbType="Bit NOT NULL")]
		public bool ORDER_DELIVERY
		{
			get
			{
				return this._ORDER_DELIVERY;
			}
			set
			{
				if ((this._ORDER_DELIVERY != value))
				{
					this.OnORDER_DELIVERYChanging(value);
					this.SendPropertyChanging();
					this._ORDER_DELIVERY = value;
					this.SendPropertyChanged("ORDER_DELIVERY");
					this.OnORDER_DELIVERYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_STATE", DbType="Bit NOT NULL")]
		public bool ORDER_STATE
		{
			get
			{
				return this._ORDER_STATE;
			}
			set
			{
				if ((this._ORDER_STATE != value))
				{
					this.OnORDER_STATEChanging(value);
					this.SendPropertyChanging();
					this._ORDER_STATE = value;
					this.SendPropertyChanged("ORDER_STATE");
					this.OnORDER_STATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ORDER_CREATEBY
		{
			get
			{
				return this._ORDER_CREATEBY;
			}
			set
			{
				if ((this._ORDER_CREATEBY != value))
				{
					if (this._TBL_USER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORDER_CREATEBYChanging(value);
					this.SendPropertyChanging();
					this._ORDER_CREATEBY = value;
					this.SendPropertyChanged("ORDER_CREATEBY");
					this.OnORDER_CREATEBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ORDER_UPDATEDBY
		{
			get
			{
				return this._ORDER_UPDATEDBY;
			}
			set
			{
				if ((this._ORDER_UPDATEDBY != value))
				{
					this.OnORDER_UPDATEDBYChanging(value);
					this.SendPropertyChanging();
					this._ORDER_UPDATEDBY = value;
					this.SendPropertyChanged("ORDER_UPDATEDBY");
					this.OnORDER_UPDATEDBYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ORDER_CREATEDATE
		{
			get
			{
				return this._ORDER_CREATEDATE;
			}
			set
			{
				if ((this._ORDER_CREATEDATE != value))
				{
					this.OnORDER_CREATEDATEChanging(value);
					this.SendPropertyChanging();
					this._ORDER_CREATEDATE = value;
					this.SendPropertyChanged("ORDER_CREATEDATE");
					this.OnORDER_CREATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ORDER_UPDATEDATE
		{
			get
			{
				return this._ORDER_UPDATEDATE;
			}
			set
			{
				if ((this._ORDER_UPDATEDATE != value))
				{
					this.OnORDER_UPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._ORDER_UPDATEDATE = value;
					this.SendPropertyChanged("ORDER_UPDATEDATE");
					this.OnORDER_UPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_PREPAID_TBL_ORDER", Storage="_TBL_PREPAID", ThisKey="ID_PREPAID", OtherKey="ID_PREPAID", IsForeignKey=true)]
		public TBL_PREPAID TBL_PREPAID
		{
			get
			{
				return this._TBL_PREPAID.Entity;
			}
			set
			{
				TBL_PREPAID previousValue = this._TBL_PREPAID.Entity;
				if (((previousValue != value) 
							|| (this._TBL_PREPAID.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_PREPAID.Entity = null;
						previousValue.TBL_ORDERs.Remove(this);
					}
					this._TBL_PREPAID.Entity = value;
					if ((value != null))
					{
						value.TBL_ORDERs.Add(this);
						this._ID_PREPAID = value.ID_PREPAID;
					}
					else
					{
						this._ID_PREPAID = default(int);
					}
					this.SendPropertyChanged("TBL_PREPAID");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBL_USER_TBL_ORDER", Storage="_TBL_USER", ThisKey="ORDER_CREATEBY", OtherKey="ID_USER", IsForeignKey=true)]
		public TBL_USER TBL_USER
		{
			get
			{
				return this._TBL_USER.Entity;
			}
			set
			{
				TBL_USER previousValue = this._TBL_USER.Entity;
				if (((previousValue != value) 
							|| (this._TBL_USER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBL_USER.Entity = null;
						previousValue.TBL_ORDERs.Remove(this);
					}
					this._TBL_USER.Entity = value;
					if ((value != null))
					{
						value.TBL_ORDERs.Add(this);
						this._ORDER_CREATEBY = value.ID_USER;
					}
					else
					{
						this._ORDER_CREATEBY = default(string);
					}
					this.SendPropertyChanged("TBL_USER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SP_CRUD_AREAResult
	{
		
		private int _ID_AREA;
		
		private string _NAME_DPT;
		
		private string _AREA_NAME;
		
		private bool _AREA_STATE;
		
		private string _AREA_CREATEBY;
		
		private string _AREA_UPDATEDBY;
		
		private System.DateTime _AREA_CREATEDATE;
		
		private System.Nullable<System.DateTime> _AREA_UPDATEDATE;
		
		public SP_CRUD_AREAResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_AREA", DbType="Int NOT NULL")]
		public int ID_AREA
		{
			get
			{
				return this._ID_AREA;
			}
			set
			{
				if ((this._ID_AREA != value))
				{
					this._ID_AREA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_DPT", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string NAME_DPT
		{
			get
			{
				return this._NAME_DPT;
			}
			set
			{
				if ((this._NAME_DPT != value))
				{
					this._NAME_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string AREA_NAME
		{
			get
			{
				return this._AREA_NAME;
			}
			set
			{
				if ((this._AREA_NAME != value))
				{
					this._AREA_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_STATE", DbType="Bit NOT NULL")]
		public bool AREA_STATE
		{
			get
			{
				return this._AREA_STATE;
			}
			set
			{
				if ((this._AREA_STATE != value))
				{
					this._AREA_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AREA_CREATEBY
		{
			get
			{
				return this._AREA_CREATEBY;
			}
			set
			{
				if ((this._AREA_CREATEBY != value))
				{
					this._AREA_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AREA_UPDATEDBY
		{
			get
			{
				return this._AREA_UPDATEDBY;
			}
			set
			{
				if ((this._AREA_UPDATEDBY != value))
				{
					this._AREA_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime AREA_CREATEDATE
		{
			get
			{
				return this._AREA_CREATEDATE;
			}
			set
			{
				if ((this._AREA_CREATEDATE != value))
				{
					this._AREA_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> AREA_UPDATEDATE
		{
			get
			{
				return this._AREA_UPDATEDATE;
			}
			set
			{
				if ((this._AREA_UPDATEDATE != value))
				{
					this._AREA_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_DPTResult
	{
		
		private int _ID_DPT;
		
		private string _NAME_DPT;
		
		private bool _STATE_DPT;
		
		private string _CREATEBY_DPT;
		
		private string _UPDATEBY_DPT;
		
		private System.DateTime _CREATEDATE_DPT;
		
		private System.Nullable<System.DateTime> _UPDATEDATE_DPT;
		
		public SP_CRUD_DPTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DPT", DbType="Int NOT NULL")]
		public int ID_DPT
		{
			get
			{
				return this._ID_DPT;
			}
			set
			{
				if ((this._ID_DPT != value))
				{
					this._ID_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_DPT", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string NAME_DPT
		{
			get
			{
				return this._NAME_DPT;
			}
			set
			{
				if ((this._NAME_DPT != value))
				{
					this._NAME_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE_DPT", DbType="Bit NOT NULL")]
		public bool STATE_DPT
		{
			get
			{
				return this._STATE_DPT;
			}
			set
			{
				if ((this._STATE_DPT != value))
				{
					this._STATE_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEBY_DPT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CREATEBY_DPT
		{
			get
			{
				return this._CREATEBY_DPT;
			}
			set
			{
				if ((this._CREATEBY_DPT != value))
				{
					this._CREATEBY_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEBY_DPT", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UPDATEBY_DPT
		{
			get
			{
				return this._UPDATEBY_DPT;
			}
			set
			{
				if ((this._UPDATEBY_DPT != value))
				{
					this._UPDATEBY_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEDATE_DPT", DbType="DateTime NOT NULL")]
		public System.DateTime CREATEDATE_DPT
		{
			get
			{
				return this._CREATEDATE_DPT;
			}
			set
			{
				if ((this._CREATEDATE_DPT != value))
				{
					this._CREATEDATE_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE_DPT", DbType="DateTime")]
		public System.Nullable<System.DateTime> UPDATEDATE_DPT
		{
			get
			{
				return this._UPDATEDATE_DPT;
			}
			set
			{
				if ((this._UPDATEDATE_DPT != value))
				{
					this._UPDATEDATE_DPT = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_PERResult
	{
		
		private int _ID_PER;
		
		private string _NAME_DPT;
		
		private string _NAME_PERMISSION;
		
		private string _DESCRIP_PERMISSION;
		
		private System.Nullable<bool> _PER_STATE;
		
		private string _PER_CREATEBY;
		
		private string _PER_UPDATEDBY;
		
		private System.DateTime _PER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _PER_UPDATEDATE;
		
		public SP_CRUD_PERResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PER", DbType="Int NOT NULL")]
		public int ID_PER
		{
			get
			{
				return this._ID_PER;
			}
			set
			{
				if ((this._ID_PER != value))
				{
					this._ID_PER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_DPT", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string NAME_DPT
		{
			get
			{
				return this._NAME_DPT;
			}
			set
			{
				if ((this._NAME_DPT != value))
				{
					this._NAME_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_PERMISSION", DbType="VarChar(15)")]
		public string NAME_PERMISSION
		{
			get
			{
				return this._NAME_PERMISSION;
			}
			set
			{
				if ((this._NAME_PERMISSION != value))
				{
					this._NAME_PERMISSION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PERMISSION", DbType="VarChar(100)")]
		public string DESCRIP_PERMISSION
		{
			get
			{
				return this._DESCRIP_PERMISSION;
			}
			set
			{
				if ((this._DESCRIP_PERMISSION != value))
				{
					this._DESCRIP_PERMISSION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_STATE", DbType="Bit")]
		public System.Nullable<bool> PER_STATE
		{
			get
			{
				return this._PER_STATE;
			}
			set
			{
				if ((this._PER_STATE != value))
				{
					this._PER_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PER_CREATEBY
		{
			get
			{
				return this._PER_CREATEBY;
			}
			set
			{
				if ((this._PER_CREATEBY != value))
				{
					this._PER_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PER_UPDATEDBY
		{
			get
			{
				return this._PER_UPDATEDBY;
			}
			set
			{
				if ((this._PER_UPDATEDBY != value))
				{
					this._PER_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime PER_CREATEDATE
		{
			get
			{
				return this._PER_CREATEDATE;
			}
			set
			{
				if ((this._PER_CREATEDATE != value))
				{
					this._PER_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PER_UPDATEDATE
		{
			get
			{
				return this._PER_UPDATEDATE;
			}
			set
			{
				if ((this._PER_UPDATEDATE != value))
				{
					this._PER_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_POSITIONResult
	{
		
		private int _ID_POSITION;
		
		private string _AREA_NAME;
		
		private string _NAME_POSITION;
		
		private bool _POSITION_STATE;
		
		private string _CREATEBY_PST;
		
		private string _UPDATEBY_PST;
		
		private System.DateTime _POSITION_CREATEDATE;
		
		private System.Nullable<System.DateTime> _POSITION_UPDATEDATE;
		
		public SP_CRUD_POSITIONResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_POSITION", DbType="Int NOT NULL")]
		public int ID_POSITION
		{
			get
			{
				return this._ID_POSITION;
			}
			set
			{
				if ((this._ID_POSITION != value))
				{
					this._ID_POSITION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string AREA_NAME
		{
			get
			{
				return this._AREA_NAME;
			}
			set
			{
				if ((this._AREA_NAME != value))
				{
					this._AREA_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_POSITION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME_POSITION
		{
			get
			{
				return this._NAME_POSITION;
			}
			set
			{
				if ((this._NAME_POSITION != value))
				{
					this._NAME_POSITION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_STATE", DbType="Bit NOT NULL")]
		public bool POSITION_STATE
		{
			get
			{
				return this._POSITION_STATE;
			}
			set
			{
				if ((this._POSITION_STATE != value))
				{
					this._POSITION_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATEBY_PST", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CREATEBY_PST
		{
			get
			{
				return this._CREATEBY_PST;
			}
			set
			{
				if ((this._CREATEBY_PST != value))
				{
					this._CREATEBY_PST = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEBY_PST", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UPDATEBY_PST
		{
			get
			{
				return this._UPDATEBY_PST;
			}
			set
			{
				if ((this._UPDATEBY_PST != value))
				{
					this._UPDATEBY_PST = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime POSITION_CREATEDATE
		{
			get
			{
				return this._POSITION_CREATEDATE;
			}
			set
			{
				if ((this._POSITION_CREATEDATE != value))
				{
					this._POSITION_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSITION_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> POSITION_UPDATEDATE
		{
			get
			{
				return this._POSITION_UPDATEDATE;
			}
			set
			{
				if ((this._POSITION_UPDATEDATE != value))
				{
					this._POSITION_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_PRODUCTResult
	{
		
		private int _ID_PRODUCT;
		
		private decimal _TOTAL_PRODUCT;
		
		private string _DESCRIP_PRICE;
		
		private bool _PRODUCT_STATE;
		
		private string _PRICE_TAG_CREATEBY;
		
		private string _PRICE_TAG_UPDATEDBY;
		
		private System.DateTime _PRODUCT_CREATEDATE;
		
		private System.Nullable<System.DateTime> _PRODUCT_UPDATEDATE;
		
		public SP_CRUD_PRODUCTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PRODUCT", DbType="Int NOT NULL")]
		public int ID_PRODUCT
		{
			get
			{
				return this._ID_PRODUCT;
			}
			set
			{
				if ((this._ID_PRODUCT != value))
				{
					this._ID_PRODUCT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRODUCT", DbType="Money NOT NULL")]
		public decimal TOTAL_PRODUCT
		{
			get
			{
				return this._TOTAL_PRODUCT;
			}
			set
			{
				if ((this._TOTAL_PRODUCT != value))
				{
					this._TOTAL_PRODUCT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PRICE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_PRICE
		{
			get
			{
				return this._DESCRIP_PRICE;
			}
			set
			{
				if ((this._DESCRIP_PRICE != value))
				{
					this._DESCRIP_PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_STATE", DbType="Bit NOT NULL")]
		public bool PRODUCT_STATE
		{
			get
			{
				return this._PRODUCT_STATE;
			}
			set
			{
				if ((this._PRODUCT_STATE != value))
				{
					this._PRODUCT_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_TAG_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRICE_TAG_CREATEBY
		{
			get
			{
				return this._PRICE_TAG_CREATEBY;
			}
			set
			{
				if ((this._PRICE_TAG_CREATEBY != value))
				{
					this._PRICE_TAG_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_TAG_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PRICE_TAG_UPDATEDBY
		{
			get
			{
				return this._PRICE_TAG_UPDATEDBY;
			}
			set
			{
				if ((this._PRICE_TAG_UPDATEDBY != value))
				{
					this._PRICE_TAG_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime PRODUCT_CREATEDATE
		{
			get
			{
				return this._PRODUCT_CREATEDATE;
			}
			set
			{
				if ((this._PRODUCT_CREATEDATE != value))
				{
					this._PRODUCT_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRODUCT_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PRODUCT_UPDATEDATE
		{
			get
			{
				return this._PRODUCT_UPDATEDATE;
			}
			set
			{
				if ((this._PRODUCT_UPDATEDATE != value))
				{
					this._PRODUCT_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_RECEIPTResult
	{
		
		private int _ID_RECEIPT;
		
		private string _NAME_CUSTOMER;
		
		private System.DateTime _DATE_RECEIPT;
		
		private int _QUANTITY;
		
		private decimal _TOTAL_RECEIPT;
		
		private string _DESCRIP_PRICE;
		
		private decimal _UNIT_PRICE;
		
		private decimal _CASH;
		
		private decimal _CHANGE;
		
		private bool _RECEIPT_STATE;
		
		private string _RECEIPT_CREATEBY;
		
		private string _RECEIPT_UPDATEDBY;
		
		private System.DateTime _RECEIPT_CREATEDATE;
		
		private System.Nullable<System.DateTime> _RECEIPT_UPDATEDATE;
		
		public SP_CRUD_RECEIPTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_RECEIPT", DbType="Int NOT NULL")]
		public int ID_RECEIPT
		{
			get
			{
				return this._ID_RECEIPT;
			}
			set
			{
				if ((this._ID_RECEIPT != value))
				{
					this._ID_RECEIPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_CUSTOMER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME_CUSTOMER
		{
			get
			{
				return this._NAME_CUSTOMER;
			}
			set
			{
				if ((this._NAME_CUSTOMER != value))
				{
					this._NAME_CUSTOMER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_RECEIPT", DbType="DateTime NOT NULL")]
		public System.DateTime DATE_RECEIPT
		{
			get
			{
				return this._DATE_RECEIPT;
			}
			set
			{
				if ((this._DATE_RECEIPT != value))
				{
					this._DATE_RECEIPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Int NOT NULL")]
		public int QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this._QUANTITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_RECEIPT", DbType="Money NOT NULL")]
		public decimal TOTAL_RECEIPT
		{
			get
			{
				return this._TOTAL_RECEIPT;
			}
			set
			{
				if ((this._TOTAL_RECEIPT != value))
				{
					this._TOTAL_RECEIPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PRICE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_PRICE
		{
			get
			{
				return this._DESCRIP_PRICE;
			}
			set
			{
				if ((this._DESCRIP_PRICE != value))
				{
					this._DESCRIP_PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT_PRICE", DbType="Money NOT NULL")]
		public decimal UNIT_PRICE
		{
			get
			{
				return this._UNIT_PRICE;
			}
			set
			{
				if ((this._UNIT_PRICE != value))
				{
					this._UNIT_PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CASH", DbType="Money NOT NULL")]
		public decimal CASH
		{
			get
			{
				return this._CASH;
			}
			set
			{
				if ((this._CASH != value))
				{
					this._CASH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHANGE", DbType="Money NOT NULL")]
		public decimal CHANGE
		{
			get
			{
				return this._CHANGE;
			}
			set
			{
				if ((this._CHANGE != value))
				{
					this._CHANGE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_STATE", DbType="Bit NOT NULL")]
		public bool RECEIPT_STATE
		{
			get
			{
				return this._RECEIPT_STATE;
			}
			set
			{
				if ((this._RECEIPT_STATE != value))
				{
					this._RECEIPT_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RECEIPT_CREATEBY
		{
			get
			{
				return this._RECEIPT_CREATEBY;
			}
			set
			{
				if ((this._RECEIPT_CREATEBY != value))
				{
					this._RECEIPT_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RECEIPT_UPDATEDBY
		{
			get
			{
				return this._RECEIPT_UPDATEDBY;
			}
			set
			{
				if ((this._RECEIPT_UPDATEDBY != value))
				{
					this._RECEIPT_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime RECEIPT_CREATEDATE
		{
			get
			{
				return this._RECEIPT_CREATEDATE;
			}
			set
			{
				if ((this._RECEIPT_CREATEDATE != value))
				{
					this._RECEIPT_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECEIPT_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RECEIPT_UPDATEDATE
		{
			get
			{
				return this._RECEIPT_UPDATEDATE;
			}
			set
			{
				if ((this._RECEIPT_UPDATEDATE != value))
				{
					this._RECEIPT_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_ROLEResult
	{
		
		private int _ID_ROLE;
		
		private string _NAME_ROLE;
		
		private string _DESCRIP_ROLE;
		
		private bool _ROLE_STATE;
		
		private string _ROLE_CREATEBY;
		
		private string _ROLE_UPDATEDBY;
		
		private System.DateTime _ROLE_CREATEDATE;
		
		private System.Nullable<System.DateTime> _ROLE_UPDATEDATE;
		
		public SP_CRUD_ROLEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROLE", DbType="Int NOT NULL")]
		public int ID_ROLE
		{
			get
			{
				return this._ID_ROLE;
			}
			set
			{
				if ((this._ID_ROLE != value))
				{
					this._ID_ROLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_ROLE", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NAME_ROLE
		{
			get
			{
				return this._NAME_ROLE;
			}
			set
			{
				if ((this._NAME_ROLE != value))
				{
					this._NAME_ROLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_ROLE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_ROLE
		{
			get
			{
				return this._DESCRIP_ROLE;
			}
			set
			{
				if ((this._DESCRIP_ROLE != value))
				{
					this._DESCRIP_ROLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_STATE", DbType="Bit NOT NULL")]
		public bool ROLE_STATE
		{
			get
			{
				return this._ROLE_STATE;
			}
			set
			{
				if ((this._ROLE_STATE != value))
				{
					this._ROLE_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLE_CREATEBY
		{
			get
			{
				return this._ROLE_CREATEBY;
			}
			set
			{
				if ((this._ROLE_CREATEBY != value))
				{
					this._ROLE_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLE_UPDATEDBY
		{
			get
			{
				return this._ROLE_UPDATEDBY;
			}
			set
			{
				if ((this._ROLE_UPDATEDBY != value))
				{
					this._ROLE_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ROLE_CREATEDATE
		{
			get
			{
				return this._ROLE_CREATEDATE;
			}
			set
			{
				if ((this._ROLE_CREATEDATE != value))
				{
					this._ROLE_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ROLE_UPDATEDATE
		{
			get
			{
				return this._ROLE_UPDATEDATE;
			}
			set
			{
				if ((this._ROLE_UPDATEDATE != value))
				{
					this._ROLE_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_ROLE_PERResult
	{
		
		private string _NAME_ROLE;
		
		private string _NAME_PERMISSION;
		
		private bool _ROLE_PER_STATE;
		
		private string _ROLE_PER_CREATEBY;
		
		private string _ROLE_PER_UPDATEDBY;
		
		private System.DateTime _ROLE_PER_CREATEDATE;
		
		private System.DateTime _ROLE_PER_UPDATEDATE;
		
		public SP_CRUD_ROLE_PERResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_ROLE", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NAME_ROLE
		{
			get
			{
				return this._NAME_ROLE;
			}
			set
			{
				if ((this._NAME_ROLE != value))
				{
					this._NAME_ROLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_PERMISSION", DbType="VarChar(15)")]
		public string NAME_PERMISSION
		{
			get
			{
				return this._NAME_PERMISSION;
			}
			set
			{
				if ((this._NAME_PERMISSION != value))
				{
					this._NAME_PERMISSION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_STATE", DbType="Bit NOT NULL")]
		public bool ROLE_PER_STATE
		{
			get
			{
				return this._ROLE_PER_STATE;
			}
			set
			{
				if ((this._ROLE_PER_STATE != value))
				{
					this._ROLE_PER_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLE_PER_CREATEBY
		{
			get
			{
				return this._ROLE_PER_CREATEBY;
			}
			set
			{
				if ((this._ROLE_PER_CREATEBY != value))
				{
					this._ROLE_PER_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ROLE_PER_UPDATEDBY
		{
			get
			{
				return this._ROLE_PER_UPDATEDBY;
			}
			set
			{
				if ((this._ROLE_PER_UPDATEDBY != value))
				{
					this._ROLE_PER_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ROLE_PER_CREATEDATE
		{
			get
			{
				return this._ROLE_PER_CREATEDATE;
			}
			set
			{
				if ((this._ROLE_PER_CREATEDATE != value))
				{
					this._ROLE_PER_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_PER_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ROLE_PER_UPDATEDATE
		{
			get
			{
				return this._ROLE_PER_UPDATEDATE;
			}
			set
			{
				if ((this._ROLE_PER_UPDATEDATE != value))
				{
					this._ROLE_PER_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_USERResult
	{
		
		private string _ID_USER;
		
		private string _USER_NAME;
		
		private string _USER_EMAIL;
		
		private string _NAME_DPT;
		
		private string _AREA_NAME;
		
		private string _NAME_POSITION;
		
		private string _NAME_ROLE;
		
		private string _USER_PASSWORD;
		
		private string _USER_NICKNAME;
		
		private bool _USER_STATE;
		
		private string _USER_CREATEBY;
		
		private string _USER_UPDATEDBY;
		
		private System.DateTime _USER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _USER_UPDATEDATE;
		
		public SP_CRUD_USERResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					this._ID_USER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NAME", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string USER_NAME
		{
			get
			{
				return this._USER_NAME;
			}
			set
			{
				if ((this._USER_NAME != value))
				{
					this._USER_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_EMAIL", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string USER_EMAIL
		{
			get
			{
				return this._USER_EMAIL;
			}
			set
			{
				if ((this._USER_EMAIL != value))
				{
					this._USER_EMAIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_DPT", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string NAME_DPT
		{
			get
			{
				return this._NAME_DPT;
			}
			set
			{
				if ((this._NAME_DPT != value))
				{
					this._NAME_DPT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string AREA_NAME
		{
			get
			{
				return this._AREA_NAME;
			}
			set
			{
				if ((this._AREA_NAME != value))
				{
					this._AREA_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_POSITION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME_POSITION
		{
			get
			{
				return this._NAME_POSITION;
			}
			set
			{
				if ((this._NAME_POSITION != value))
				{
					this._NAME_POSITION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_ROLE", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string NAME_ROLE
		{
			get
			{
				return this._NAME_ROLE;
			}
			set
			{
				if ((this._NAME_ROLE != value))
				{
					this._NAME_ROLE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PASSWORD", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string USER_PASSWORD
		{
			get
			{
				return this._USER_PASSWORD;
			}
			set
			{
				if ((this._USER_PASSWORD != value))
				{
					this._USER_PASSWORD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NICKNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_NICKNAME
		{
			get
			{
				return this._USER_NICKNAME;
			}
			set
			{
				if ((this._USER_NICKNAME != value))
				{
					this._USER_NICKNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_STATE", DbType="Bit NOT NULL")]
		public bool USER_STATE
		{
			get
			{
				return this._USER_STATE;
			}
			set
			{
				if ((this._USER_STATE != value))
				{
					this._USER_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string USER_CREATEBY
		{
			get
			{
				return this._USER_CREATEBY;
			}
			set
			{
				if ((this._USER_CREATEBY != value))
				{
					this._USER_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_UPDATEDBY", DbType="VarChar(50)")]
		public string USER_UPDATEDBY
		{
			get
			{
				return this._USER_UPDATEDBY;
			}
			set
			{
				if ((this._USER_UPDATEDBY != value))
				{
					this._USER_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime USER_CREATEDATE
		{
			get
			{
				return this._USER_CREATEDATE;
			}
			set
			{
				if ((this._USER_CREATEDATE != value))
				{
					this._USER_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> USER_UPDATEDATE
		{
			get
			{
				return this._USER_UPDATEDATE;
			}
			set
			{
				if ((this._USER_UPDATEDATE != value))
				{
					this._USER_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_CUSTOMERResult
	{
		
		private string _ID_CUSTOMER;
		
		private string _CUSTOMER_NAME;
		
		private bool _CUSTOMER_STATE;
		
		private string _CUSTOMER_CREATEBY;
		
		private string _CUSTOMER_UPDATEDBY;
		
		private System.DateTime _CUSTOMER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _CUSTOMER_UPDATEDATE;
		
		public SP_CRUD_CUSTOMERResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUSTOMER", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ID_CUSTOMER
		{
			get
			{
				return this._ID_CUSTOMER;
			}
			set
			{
				if ((this._ID_CUSTOMER != value))
				{
					this._ID_CUSTOMER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this._CUSTOMER_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_STATE", DbType="Bit NOT NULL")]
		public bool CUSTOMER_STATE
		{
			get
			{
				return this._CUSTOMER_STATE;
			}
			set
			{
				if ((this._CUSTOMER_STATE != value))
				{
					this._CUSTOMER_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_CREATEBY
		{
			get
			{
				return this._CUSTOMER_CREATEBY;
			}
			set
			{
				if ((this._CUSTOMER_CREATEBY != value))
				{
					this._CUSTOMER_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_UPDATEDBY
		{
			get
			{
				return this._CUSTOMER_UPDATEDBY;
			}
			set
			{
				if ((this._CUSTOMER_UPDATEDBY != value))
				{
					this._CUSTOMER_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CUSTOMER_CREATEDATE
		{
			get
			{
				return this._CUSTOMER_CREATEDATE;
			}
			set
			{
				if ((this._CUSTOMER_CREATEDATE != value))
				{
					this._CUSTOMER_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CUSTOMER_UPDATEDATE
		{
			get
			{
				return this._CUSTOMER_UPDATEDATE;
			}
			set
			{
				if ((this._CUSTOMER_UPDATEDATE != value))
				{
					this._CUSTOMER_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_STOCKResult
	{
		
		private int _ID_STOCK;
		
		private string _DESCRIP_PRICE;
		
		private int _STOCK_INITIAL_QUANTITY;
		
		private int _STOCK_QUANTITY;
		
		private int _STOCK_ADJUSTMENT;
		
		private System.DateTime _STOCK_DATE_PRODUCT;
		
		private bool _STOCK_STATE;
		
		private string _STOCK_CREATEBY;
		
		private string _STOCK_UPDATEDBY;
		
		private System.DateTime _STOCK_CREATEDATE;
		
		private System.Nullable<System.DateTime> _STOCK_UPDATEDATE;
		
		public SP_CRUD_STOCKResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_STOCK", DbType="Int NOT NULL")]
		public int ID_STOCK
		{
			get
			{
				return this._ID_STOCK;
			}
			set
			{
				if ((this._ID_STOCK != value))
				{
					this._ID_STOCK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PRICE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_PRICE
		{
			get
			{
				return this._DESCRIP_PRICE;
			}
			set
			{
				if ((this._DESCRIP_PRICE != value))
				{
					this._DESCRIP_PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_INITIAL_QUANTITY", DbType="Int NOT NULL")]
		public int STOCK_INITIAL_QUANTITY
		{
			get
			{
				return this._STOCK_INITIAL_QUANTITY;
			}
			set
			{
				if ((this._STOCK_INITIAL_QUANTITY != value))
				{
					this._STOCK_INITIAL_QUANTITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_QUANTITY", DbType="Int NOT NULL")]
		public int STOCK_QUANTITY
		{
			get
			{
				return this._STOCK_QUANTITY;
			}
			set
			{
				if ((this._STOCK_QUANTITY != value))
				{
					this._STOCK_QUANTITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_ADJUSTMENT", DbType="Int NOT NULL")]
		public int STOCK_ADJUSTMENT
		{
			get
			{
				return this._STOCK_ADJUSTMENT;
			}
			set
			{
				if ((this._STOCK_ADJUSTMENT != value))
				{
					this._STOCK_ADJUSTMENT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_DATE_PRODUCT", DbType="DateTime NOT NULL")]
		public System.DateTime STOCK_DATE_PRODUCT
		{
			get
			{
				return this._STOCK_DATE_PRODUCT;
			}
			set
			{
				if ((this._STOCK_DATE_PRODUCT != value))
				{
					this._STOCK_DATE_PRODUCT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_STATE", DbType="Bit NOT NULL")]
		public bool STOCK_STATE
		{
			get
			{
				return this._STOCK_STATE;
			}
			set
			{
				if ((this._STOCK_STATE != value))
				{
					this._STOCK_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string STOCK_CREATEBY
		{
			get
			{
				return this._STOCK_CREATEBY;
			}
			set
			{
				if ((this._STOCK_CREATEBY != value))
				{
					this._STOCK_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string STOCK_UPDATEDBY
		{
			get
			{
				return this._STOCK_UPDATEDBY;
			}
			set
			{
				if ((this._STOCK_UPDATEDBY != value))
				{
					this._STOCK_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STOCK_CREATEDATE
		{
			get
			{
				return this._STOCK_CREATEDATE;
			}
			set
			{
				if ((this._STOCK_CREATEDATE != value))
				{
					this._STOCK_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STOCK_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> STOCK_UPDATEDATE
		{
			get
			{
				return this._STOCK_UPDATEDATE;
			}
			set
			{
				if ((this._STOCK_UPDATEDATE != value))
				{
					this._STOCK_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_CXCResult
	{
		
		private int _ID_CXC;
		
		private string _CUSTOMER_NAME;
		
		private string _DESCRIP_PRICE;
		
		private int _QUANTITY_RETREAT;
		
		private int _QUANTITY_RETURN;
		
		private decimal _TOTAL_CXC;
		
		private int _BALANCE_CXC;
		
		private bool _CXC_STATE;
		
		private string _CXC_CREATEBY;
		
		private string _CXC_UPDATEDBY;
		
		private System.DateTime _CXC_CREATEDATE;
		
		private System.DateTime _CXC_UPDATEDATE;
		
		public SP_CRUD_CXCResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CXC", DbType="Int NOT NULL")]
		public int ID_CXC
		{
			get
			{
				return this._ID_CXC;
			}
			set
			{
				if ((this._ID_CXC != value))
				{
					this._ID_CXC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this._CUSTOMER_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PRICE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_PRICE
		{
			get
			{
				return this._DESCRIP_PRICE;
			}
			set
			{
				if ((this._DESCRIP_PRICE != value))
				{
					this._DESCRIP_PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_RETREAT", DbType="Int NOT NULL")]
		public int QUANTITY_RETREAT
		{
			get
			{
				return this._QUANTITY_RETREAT;
			}
			set
			{
				if ((this._QUANTITY_RETREAT != value))
				{
					this._QUANTITY_RETREAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY_RETURN", DbType="Int NOT NULL")]
		public int QUANTITY_RETURN
		{
			get
			{
				return this._QUANTITY_RETURN;
			}
			set
			{
				if ((this._QUANTITY_RETURN != value))
				{
					this._QUANTITY_RETURN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_CXC", DbType="Money NOT NULL")]
		public decimal TOTAL_CXC
		{
			get
			{
				return this._TOTAL_CXC;
			}
			set
			{
				if ((this._TOTAL_CXC != value))
				{
					this._TOTAL_CXC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BALANCE_CXC", DbType="Int NOT NULL")]
		public int BALANCE_CXC
		{
			get
			{
				return this._BALANCE_CXC;
			}
			set
			{
				if ((this._BALANCE_CXC != value))
				{
					this._BALANCE_CXC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_STATE", DbType="Bit NOT NULL")]
		public bool CXC_STATE
		{
			get
			{
				return this._CXC_STATE;
			}
			set
			{
				if ((this._CXC_STATE != value))
				{
					this._CXC_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CXC_CREATEBY
		{
			get
			{
				return this._CXC_CREATEBY;
			}
			set
			{
				if ((this._CXC_CREATEBY != value))
				{
					this._CXC_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CXC_UPDATEDBY
		{
			get
			{
				return this._CXC_UPDATEDBY;
			}
			set
			{
				if ((this._CXC_UPDATEDBY != value))
				{
					this._CXC_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CXC_CREATEDATE
		{
			get
			{
				return this._CXC_CREATEDATE;
			}
			set
			{
				if ((this._CXC_CREATEDATE != value))
				{
					this._CXC_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CXC_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime CXC_UPDATEDATE
		{
			get
			{
				return this._CXC_UPDATEDATE;
			}
			set
			{
				if ((this._CXC_UPDATEDATE != value))
				{
					this._CXC_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_PREPAIDResult
	{
		
		private int _ID_PREPAID;
		
		private string _CUSTOMER_NAME;
		
		private string _DESCRIP_PRICE;
		
		private int _PREPAID_QUANTITY;
		
		private decimal _PREPAID_TOTAL;
		
		private decimal _PREPAID_CASH;
		
		private decimal _PREPAID_CHANGE;
		
		private int _PREPAID_BALANCE;
		
		private bool _PREPAID_STATE;
		
		private string _PREPAID_CREATEBY;
		
		private string _PREPAID_UPDATEDBY;
		
		private System.DateTime _PREPAID_CREATEDATE;
		
		private System.Nullable<System.DateTime> _PREPAID_UPDATEDATE;
		
		public SP_CRUD_PREPAIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PREPAID", DbType="Int NOT NULL")]
		public int ID_PREPAID
		{
			get
			{
				return this._ID_PREPAID;
			}
			set
			{
				if ((this._ID_PREPAID != value))
				{
					this._ID_PREPAID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_NAME", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string CUSTOMER_NAME
		{
			get
			{
				return this._CUSTOMER_NAME;
			}
			set
			{
				if ((this._CUSTOMER_NAME != value))
				{
					this._CUSTOMER_NAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIP_PRICE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCRIP_PRICE
		{
			get
			{
				return this._DESCRIP_PRICE;
			}
			set
			{
				if ((this._DESCRIP_PRICE != value))
				{
					this._DESCRIP_PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_QUANTITY", DbType="Int NOT NULL")]
		public int PREPAID_QUANTITY
		{
			get
			{
				return this._PREPAID_QUANTITY;
			}
			set
			{
				if ((this._PREPAID_QUANTITY != value))
				{
					this._PREPAID_QUANTITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_TOTAL", DbType="Money NOT NULL")]
		public decimal PREPAID_TOTAL
		{
			get
			{
				return this._PREPAID_TOTAL;
			}
			set
			{
				if ((this._PREPAID_TOTAL != value))
				{
					this._PREPAID_TOTAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CASH", DbType="Money NOT NULL")]
		public decimal PREPAID_CASH
		{
			get
			{
				return this._PREPAID_CASH;
			}
			set
			{
				if ((this._PREPAID_CASH != value))
				{
					this._PREPAID_CASH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CHANGE", DbType="Money NOT NULL")]
		public decimal PREPAID_CHANGE
		{
			get
			{
				return this._PREPAID_CHANGE;
			}
			set
			{
				if ((this._PREPAID_CHANGE != value))
				{
					this._PREPAID_CHANGE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_BALANCE", DbType="Int NOT NULL")]
		public int PREPAID_BALANCE
		{
			get
			{
				return this._PREPAID_BALANCE;
			}
			set
			{
				if ((this._PREPAID_BALANCE != value))
				{
					this._PREPAID_BALANCE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_STATE", DbType="Bit NOT NULL")]
		public bool PREPAID_STATE
		{
			get
			{
				return this._PREPAID_STATE;
			}
			set
			{
				if ((this._PREPAID_STATE != value))
				{
					this._PREPAID_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PREPAID_CREATEBY
		{
			get
			{
				return this._PREPAID_CREATEBY;
			}
			set
			{
				if ((this._PREPAID_CREATEBY != value))
				{
					this._PREPAID_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PREPAID_UPDATEDBY
		{
			get
			{
				return this._PREPAID_UPDATEDBY;
			}
			set
			{
				if ((this._PREPAID_UPDATEDBY != value))
				{
					this._PREPAID_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime PREPAID_CREATEDATE
		{
			get
			{
				return this._PREPAID_CREATEDATE;
			}
			set
			{
				if ((this._PREPAID_CREATEDATE != value))
				{
					this._PREPAID_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREPAID_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> PREPAID_UPDATEDATE
		{
			get
			{
				return this._PREPAID_UPDATEDATE;
			}
			set
			{
				if ((this._PREPAID_UPDATEDATE != value))
				{
					this._PREPAID_UPDATEDATE = value;
				}
			}
		}
	}
	
	public partial class SP_CRUD_ORDERResult
	{
		
		private int _ID_ORDER;
		
		private int _ID_PREPAID;
		
		private int _ORDER_QUANTITY;
		
		private System.DateTime _ORDER_DATE;
		
		private bool _ORDER_DELIVERY;
		
		private bool _ORDER_STATE;
		
		private string _ORDER_CREATEBY;
		
		private string _ORDER_UPDATEDBY;
		
		private System.DateTime _ORDER_CREATEDATE;
		
		private System.Nullable<System.DateTime> _ORDER_UPDATEDATE;
		
		public SP_CRUD_ORDERResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ORDER", DbType="Int NOT NULL")]
		public int ID_ORDER
		{
			get
			{
				return this._ID_ORDER;
			}
			set
			{
				if ((this._ID_ORDER != value))
				{
					this._ID_ORDER = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_PREPAID", DbType="Int NOT NULL")]
		public int ID_PREPAID
		{
			get
			{
				return this._ID_PREPAID;
			}
			set
			{
				if ((this._ID_PREPAID != value))
				{
					this._ID_PREPAID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_QUANTITY", DbType="Int NOT NULL")]
		public int ORDER_QUANTITY
		{
			get
			{
				return this._ORDER_QUANTITY;
			}
			set
			{
				if ((this._ORDER_QUANTITY != value))
				{
					this._ORDER_QUANTITY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime ORDER_DATE
		{
			get
			{
				return this._ORDER_DATE;
			}
			set
			{
				if ((this._ORDER_DATE != value))
				{
					this._ORDER_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_DELIVERY", DbType="Bit NOT NULL")]
		public bool ORDER_DELIVERY
		{
			get
			{
				return this._ORDER_DELIVERY;
			}
			set
			{
				if ((this._ORDER_DELIVERY != value))
				{
					this._ORDER_DELIVERY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_STATE", DbType="Bit NOT NULL")]
		public bool ORDER_STATE
		{
			get
			{
				return this._ORDER_STATE;
			}
			set
			{
				if ((this._ORDER_STATE != value))
				{
					this._ORDER_STATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_CREATEBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ORDER_CREATEBY
		{
			get
			{
				return this._ORDER_CREATEBY;
			}
			set
			{
				if ((this._ORDER_CREATEBY != value))
				{
					this._ORDER_CREATEBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_UPDATEDBY", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ORDER_UPDATEDBY
		{
			get
			{
				return this._ORDER_UPDATEDBY;
			}
			set
			{
				if ((this._ORDER_UPDATEDBY != value))
				{
					this._ORDER_UPDATEDBY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_CREATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ORDER_CREATEDATE
		{
			get
			{
				return this._ORDER_CREATEDATE;
			}
			set
			{
				if ((this._ORDER_CREATEDATE != value))
				{
					this._ORDER_CREATEDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDER_UPDATEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ORDER_UPDATEDATE
		{
			get
			{
				return this._ORDER_UPDATEDATE;
			}
			set
			{
				if ((this._ORDER_UPDATEDATE != value))
				{
					this._ORDER_UPDATEDATE = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
